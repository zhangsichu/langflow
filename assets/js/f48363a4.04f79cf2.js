"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[7800],{17886:(e,o,n)=>{n.d(o,{A:()=>r});n(96540);var t=n(64058),s=n(74848);function r({name:e,...o}){const n=t[e];return n?(0,s.jsx)(n,{...o}):null}},90050:(e,o,n)=>{n.r(o),n.d(o,{CH:()=>d,assets:()=>h,chCodeConfig:()=>p,contentTitle:()=>a,default:()=>x,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Develop/webhook","title":"Trigger flows with webhooks","description":"You can use the Webhook component to start a flow run in response to an external event.","source":"@site/docs/Develop/webhook.mdx","sourceDirName":"Develop","slug":"/webhook","permalink":"/webhook","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Trigger flows with webhooks","slug":"/webhook"},"sidebar":"docs","previous":{"title":"Trigger flows with the Langflow API","permalink":"/concepts-publish"},"next":{"title":"Test flows","permalink":"/concepts-playground"}}');var s=n(74848),r=n(28453),c=n(24754),i=n(17886);const l={title:"Trigger flows with webhooks",slug:"/webhook"},a=void 0,h={},d={annotations:c.hk,Code:c.Cy},p={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},u=[{value:"Configure the Webhook component",id:"configure-the-webhook-component",level:2},{value:"Trigger flows with Composio webhooks",id:"trigger-flows-with-composio-webhooks",level:2},{value:"Troubleshoot flows with Webhook components",id:"troubleshoot-flows-with-webhook-components",level:2},{value:"Validate data received by the Webhook component",id:"validate-data-received-by-the-webhook-component",level:3},{value:"Parser component build failure",id:"parser-component-build-failure",level:3},{value:"See also",id:"see-also",level:2}];function g(e){const o={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return d||j("CH",!1),d.Code||j("CH.Code",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,s.jsxs)(o.p,{children:["You can use the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component to start a flow run in response to an external event."]}),"\n",(0,s.jsxs)(o.p,{children:["With the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component, a flow can receive data directly from external sources. Then, the flow can parse the data and pass it to other components in the flow to initiate other actions, such as calling APIs, writing to databases, and chatting with LLMs.\nIf the input isn't valid JSON, the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component wraps it in a ",(0,s.jsx)(o.code,{children:"payload"})," object so that it can be accepted as input to trigger the flow."]}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.strong,{children:"Webhook"})," component provides a versatile entrypoint that can make your flows more event-driven and integrated with your entire stack of applications and services.\nFor example:"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Use an LLM to analyze the sentiment and content of customer feedback or survey responses."}),"\n",(0,s.jsx)(o.li,{children:"Receive notifications from a monitoring system, and then trigger automated responses based on alert type and severity."}),"\n",(0,s.jsx)(o.li,{children:"Integrate with e-commerce platforms to process orders and update inventory."}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"configure-the-webhook-component",children:"Configure the Webhook component"}),"\n",(0,s.jsxs)(o.p,{children:["To use the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component in a flow, do the following:"]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["In Langflow, open the flow where you want to use the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Add a ",(0,s.jsxs)(o.a,{href:"/components-data#webhook",children:[(0,s.jsx)(o.strong,{children:"Webhook"})," component"]})," and a ",(0,s.jsxs)(o.a,{href:"/components-processing#parser",children:[(0,s.jsx)(o.strong,{children:"Parser"})," component"]})," to your flow."]}),"\n",(0,s.jsxs)(o.p,{children:["These two components are commonly paired together because the ",(0,s.jsx)(o.strong,{children:"Parser"})," component extracts relevant data from the raw payload received by the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Connect the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component's ",(0,s.jsx)(o.strong,{children:"Data"})," output to the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Data"})," input."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["In the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Template"})," field, enter a template to parse the raw payload into structured text."]}),"\n",(0,s.jsxs)(o.p,{children:["In the template, use variables for payload keys in the same way you would define variables in a ",(0,s.jsxs)(o.a,{href:"/components-prompts",children:[(0,s.jsx)(o.strong,{children:"Prompt Template"})," component"]}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["For example, assume that you expect your ",(0,s.jsx)(o.strong,{children:"Webhook"})," component to receive the following JSON data:"]}),"\n",(0,s.jsx)(d.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "email"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n",(0,s.jsx)(o.p,{children:"Then, you can use curly braces to reference the JSON keys anywhere in your parser template:"}),"\n",(0,s.jsx)(d.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"ID: {id} - Name: {name} - Email: {email}",props:{}}]}],lang:"text"},annotations:[]}]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Connect the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Parsed Text"})," output to the next logical component in your flow, such as a ",(0,s.jsx)(o.strong,{children:"Chat Input"})," component."]}),"\n",(0,s.jsxs)(o.p,{children:["If you want to test only the ",(0,s.jsx)(o.strong,{children:"Webhook"})," and ",(0,s.jsx)(o.strong,{children:"Parser"})," components, you can connect the ",(0,s.jsx)(o.strong,{children:"Parsed Text"})," output directly to a ",(0,s.jsx)(o.strong,{children:"Chat Output"})," component's ",(0,s.jsx)(o.strong,{children:"Text"})," input. Then, you can see the parsed data in the ",(0,s.jsx)(o.strong,{children:"Playground"})," after you run the flow."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["From the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component's ",(0,s.jsx)(o.strong,{children:"Endpoint"})," field, copy the API endpoint that you will use to send data to the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component and trigger the flow."]}),"\n",(0,s.jsxs)(o.p,{children:["Alternatively, to get a complete ",(0,s.jsx)(o.code,{children:"POST /v1/webhook/$FLOW_ID"})," code snippet, open the flow's ",(0,s.jsxs)(o.a,{href:"/concepts-publish#api-access",children:[(0,s.jsx)(o.strong,{children:"API access"})," pane"]}),", and then click the ",(0,s.jsx)(o.strong,{children:"Webhook curl"})," tab.\nYou can also modify the default curl command in the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component's ",(0,s.jsx)(o.strong,{children:"curl"})," field.\nIf this field isn't visible by default, click the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component, and then click ",(0,s.jsx)(i.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,s.jsx)(o.strong,{children:"Controls"})," in the ",(0,s.jsx)(o.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Send a POST request with ",(0,s.jsx)(o.code,{children:"data"})," to the flow's ",(0,s.jsx)(o.code,{children:"webhook"})," endpoint to trigger the flow."]}),"\n",(0,s.jsxs)(o.p,{children:["The following example sends a payload containing ",(0,s.jsx)(o.code,{children:"id"}),", ",(0,s.jsx)(o.code,{children:"name"}),", and ",(0,s.jsx)(o.code,{children:"email"})," strings:"]}),"\n",(0,s.jsx)(d.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"curl ",props:{style:{color:"#FFA657"}}},{content:"-X ",props:{style:{color:"#79C0FF"}}},{content:'POST "http://localhost:7860/api/v1/webhook/FLOW_ID" ',props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"    -H ",props:{style:{color:"#79C0FF"}}},{content:'"Content-Type: application/json" ',props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"    -H ",props:{style:{color:"#79C0FF"}}},{content:'"x-api-key: LANGFLOW_API_KEY" ',props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"    -d ",props:{style:{color:"#79C0FF"}}},{content:'\'{"id": "12345", "name": "alex", "email": "alex@email.com"}\'',props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,s.jsx)(o.p,{children:"A successful response indicates that Langflow started the flow.\nThe response doesn't include the output for the entire flow, only an indication that the flow started."}),"\n",(0,s.jsx)(d.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "message"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Task started in the background"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "status"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"in progress"',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["To view the flow's most recent parsed payload, click the ",(0,s.jsx)(o.strong,{children:"Parser"})," component, and then click ",(0,s.jsx)(i.A,{name:"TextSearch","aria-hidden":"true"})," ",(0,s.jsx)(o.strong,{children:"Inspect output"}),".\nFor the preceding example, the parsed payload would be a string like ",(0,s.jsx)(o.code,{children:"ID: 12345 - Name: alex - Email: alex@email.com"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"trigger-flows-with-composio-webhooks",children:"Trigger flows with Composio webhooks"}),"\n",(0,s.jsxs)(o.p,{children:["Typically, you won't manually trigger the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component.\nTo learn about triggering flows with payloads from external applications, see the video tutorial ",(0,s.jsx)(o.a,{href:"https://www.youtube.com/watch?v=IC1CAtzFRE0",children:"How to Use Webhooks in Langflow"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"troubleshoot-flows-with-webhook-components",children:"Troubleshoot flows with Webhook components"}),"\n",(0,s.jsxs)(o.p,{children:["Use the following information to help address common issues that can occur with the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component."]}),"\n",(0,s.jsx)(o.h3,{id:"validate-data-received-by-the-webhook-component",children:"Validate data received by the Webhook component"}),"\n",(0,s.jsxs)(o.p,{children:["To troubleshoot a flow with a ",(0,s.jsx)(o.strong,{children:"Webhook"})," component and verify that the component is receiving data, you can create a small flow that outputs only the parsed payload:"]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Create a flow with ",(0,s.jsx)(o.strong,{children:"Webhook"}),", ",(0,s.jsx)(o.strong,{children:"Parser"}),", and ",(0,s.jsx)(o.strong,{children:"Chat Output"})," components."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Connect the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component's ",(0,s.jsx)(o.strong,{children:"Data"})," output to the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Data"})," input."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Connect the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Parsed Text"})," output to the ",(0,s.jsx)(o.strong,{children:"Chat Output"})," component's ",(0,s.jsx)(o.strong,{children:"Text"})," input."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Edit the ",(0,s.jsx)(o.strong,{children:"Parser"})," component to set ",(0,s.jsx)(o.strong,{children:"Mode"})," to ",(0,s.jsx)(o.strong,{children:"Stringify"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["This mode passes the data received by the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component as a string that is printed by the ",(0,s.jsx)(o.strong,{children:"Chat Output"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Click ",(0,s.jsx)(o.strong,{children:"Share"}),", select ",(0,s.jsx)(o.strong,{children:"API access"}),", and then copy the ",(0,s.jsx)(o.strong,{children:"Webhook curl"})," code snippet."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Optional: Edit the ",(0,s.jsx)(o.code,{children:"data"})," in the code snippet if you want to pass a different payload."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"Send the POST request to trigger the flow."}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Click ",(0,s.jsx)(o.strong,{children:"Playground"})," to verify that the ",(0,s.jsx)(o.strong,{children:"Chat Output"})," component printed the JSON data from your POST request."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"parser-component-build-failure",children:"Parser component build failure"}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.strong,{children:"Parser"})," component can fail to build if it doesn't receive data from the ",(0,s.jsx)(o.strong,{children:"Webhook"})," component or if there is a problem with the incoming data."]}),"\n",(0,s.jsxs)(o.p,{children:["If this occurs, try changing the ",(0,s.jsx)(o.strong,{children:"Parser"})," component's ",(0,s.jsx)(o.strong,{children:"Mode"})," to ",(0,s.jsx)(o.strong,{children:"Stringify"})," so that the component outputs the parsed payload as a single string.\nThen, you can examine the string output and troubleshoot your parsing template, or work with the parsed data in string form."]}),"\n",(0,s.jsx)(o.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/api-reference-api-examples",children:"Get started with the Langflow API"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsxs)(o.a,{href:"/components-data#webhook",children:[(0,s.jsx)(o.strong,{children:"Webhook"})," component"]})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/api-flows-run",children:"Flow trigger endpoints"})}),"\n"]})]})}function x(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function j(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);