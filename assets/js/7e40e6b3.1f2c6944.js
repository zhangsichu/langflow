"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[9227],{17886:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var r=n(64058),s=n(74848);function i({name:e,...t}){const n=r[e];return n?(0,s.jsx)(n,{...t}):null}},78066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"Components/bundles-mem0","title":"Mem0","description":"Bundles contain custom components that support specific third-party integrations with Langflow.","source":"@site/docs/Components/bundles-mem0.mdx","sourceDirName":"Components","slug":"/bundles-mem0","permalink":"/bundles-mem0","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Mem0","slug":"/bundles-mem0"},"sidebar":"docs","previous":{"title":"MariTalk","permalink":"/bundles-maritalk"},"next":{"title":"MistralAI","permalink":"/bundles-mistralai"}}');var s=n(74848),i=n(28453),a=n(17886);const o={title:"Mem0",slug:"/bundles-mem0"},d=void 0,h={},m=[{value:"Mem0 Chat Memory",id:"mem0-chat-memory",level:2},{value:"Mem0 Chat Memory parameters",id:"mem0-chat-memory-parameters",level:3},{value:"Mem0 Chat Memory output",id:"mem0-chat-memory-output",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/components-bundle-components",children:"Bundles"})," contain custom components that support specific third-party integrations with Langflow."]}),"\n",(0,s.jsxs)(t.p,{children:["This page describes the components that are available in the ",(0,s.jsx)(t.strong,{children:"Mem0"})," bundle."]}),"\n",(0,s.jsx)(t.h2,{id:"mem0-chat-memory",children:"Mem0 Chat Memory"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Mem0 Chat Memory"})," component retrieves and stores chat messages using Mem0 memory storage."]}),"\n",(0,s.jsx)(t.h3,{id:"mem0-chat-memory-parameters",children:"Mem0 Chat Memory parameters"}),"\n",(0,s.jsxs)(t.p,{children:["Many ",(0,s.jsx)(t.strong,{children:"Mem0 Chat Memory"})," component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,s.jsx)(a.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,s.jsx)(t.strong,{children:"Controls"})," in the ",(0,s.jsx)(t.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Info"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"mem0_config"}),(0,s.jsx)(t.td,{children:"Mem0 Configuration"}),(0,s.jsx)(t.td,{children:"Input parameter. The configuration dictionary for initializing the Mem0 memory instance."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ingest_message"}),(0,s.jsx)(t.td,{children:"Message to Ingest"}),(0,s.jsx)(t.td,{children:"Input parameter. The message content to be ingested into Mem0 memory."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"existing_memory"}),(0,s.jsx)(t.td,{children:"Existing Memory Instance"}),(0,s.jsx)(t.td,{children:"Input parameter. An optional existing Mem0 memory instance."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_id"}),(0,s.jsx)(t.td,{children:"User ID"}),(0,s.jsx)(t.td,{children:"Input parameter. The identifier for the user associated with the messages."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"search_query"}),(0,s.jsx)(t.td,{children:"Search Query"}),(0,s.jsx)(t.td,{children:"Input parameter. The input text for searching related memories in Mem0."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"mem0_api_key"}),(0,s.jsx)(t.td,{children:"Mem0 API Key"}),(0,s.jsx)(t.td,{children:"Input parameter. The API key for the Mem0 platform. Leave empty to use the local version."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"metadata"}),(0,s.jsx)(t.td,{children:"Metadata"}),(0,s.jsx)(t.td,{children:"Input parameter. The additional metadata to associate with the ingested message."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"openai_api_key"}),(0,s.jsx)(t.td,{children:"OpenAI API Key"}),(0,s.jsx)(t.td,{children:"Input parameter. The API key for OpenAI. Required when using OpenAI embeddings without a provided configuration."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"mem0-chat-memory-output",children:"Mem0 Chat Memory output"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Mem0 Chat Memory"})," component can output either ",(0,s.jsx)(t.strong,{children:"Mem0 Memory"})," (",(0,s.jsx)(t.a,{href:"/data-types#memory",children:(0,s.jsx)(t.code,{children:"Memory"})}),") or ",(0,s.jsx)(t.strong,{children:"Search Results"})," (",(0,s.jsx)(t.a,{href:"/data-types#data",children:(0,s.jsx)(t.code,{children:"Data"})}),").\nYou can select the output type near the component's output port."]}),"\n",(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.strong,{children:"Mem0 Chat Memory"})," for memory storage and retrieval operations with the ",(0,s.jsxs)(t.a,{href:"/components-helpers#message-history",children:[(0,s.jsx)(t.strong,{children:"Message History"})," component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.strong,{children:"Search Results"})," output to retrieve specific memories based on a search query."]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);