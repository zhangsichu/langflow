"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[3094],{11470:(e,t,o)=>{o.d(t,{A:()=>C});var n=o(96540),s=o(18215),r=o(23104),c=o(56347),a=o(205),l=o(57485),i=o(31682),d=o(70679);function p(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:o}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return p(e).map(({props:{value:e,label:t,attributes:o,default:n}})=>({value:e,label:t,attributes:o,default:n}))}(o);return function(e){const t=(0,i.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,o])}function u({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const o=(0,c.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(s),(0,n.useCallback)(e=>{if(!s)return;const t=new URLSearchParams(o.location.search);t.set(s,e),o.replace({...o.location,search:t.toString()})},[s,o])]}function y(e){const{defaultValue:t,queryString:o=!1,groupId:s}=e,r=h(e),[c,l]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const o=t.find(e=>e.default)??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r})),[i,p]=m({queryString:o,groupId:s}),[y,x]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[o,s]=(0,d.Dv)(t);return[o,(0,n.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:s}),g=(()=>{const e=i??y;return u({value:e,tabValues:r})?e:null})();(0,a.A)(()=>{g&&l(g)},[g]);return{selectedValue:c,selectValue:(0,n.useCallback)(e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),x(e)},[p,x,r]),tabValues:r}}var x=o(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=o(74848);function f({className:e,block:t,selectedValue:o,selectValue:n,tabValues:c}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),i=e=>{const t=e.currentTarget,s=a.indexOf(t),r=c[s].value;r!==o&&(l(t),n(r))},d=e=>{let t=null;switch(e.key){case"Enter":i(e);break;case"ArrowRight":{const o=a.indexOf(e.currentTarget)+1;t=a[o]??a[0];break}case"ArrowLeft":{const o=a.indexOf(e.currentTarget)-1;t=a[o]??a[a.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:c.map(({value:e,label:t,attributes:n})=>(0,j.jsx)("li",{role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:i,...n,className:(0,s.A)("tabs__item",g.tabItem,n?.className,{"tabs__item--active":o===e}),children:t??e},e))})}function D({lazy:e,children:t,selectedValue:o}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===o);return e?(0,n.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==o}))})}function b(e){const t=y(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,j.jsx)(f,{...t,...e}),(0,j.jsx)(D,{...t,...e})]})}function C(e){const t=(0,x.A)();return(0,j.jsx)(b,{...e,children:p(e.children)},String(t))}},17886:(e,t,o)=>{o.d(t,{A:()=>r});o(96540);var n=o(64058),s=o(74848);function r({name:e,...t}){const o=n[e];return o?(0,s.jsx)(o,{...t}):null}},19365:(e,t,o)=>{o.d(t,{A:()=>c});o(96540);var n=o(18215);const s={tabItem:"tabItem_Ymn6"};var r=o(74848);function c({children:e,hidden:t,className:o}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,o),hidden:t,children:e})}},20892:(e,t,o)=>{o.r(t),o.d(t,{CH:()=>u,assets:()=>h,chCodeConfig:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>d,metadata:()=>n,toc:()=>y});const n=JSON.parse('{"id":"Concepts/data-types","title":"Langflow data types","description":"Langflow components are designed to accept and produce specific types of inputs and outputs.","source":"@site/docs/Concepts/data-types.mdx","sourceDirName":"Concepts","slug":"/data-types","permalink":"/data-types","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Langflow data types","slug":"/data-types"},"sidebar":"docs","previous":{"title":"Telemetry","permalink":"/contributing-telemetry"},"next":{"title":"Use voice mode","permalink":"/concepts-voice-mode"}}');var s=o(74848),r=o(28453),c=o(24754),a=o(11470),l=o(19365),i=o(17886);const d={title:"Langflow data types",slug:"/data-types"},p=void 0,h={},u={annotations:c.hk,Code:c.Cy},m={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},y=[{value:"Data",id:"data",level:2},{value:"Schema and attributes",id:"schema-and-attributes",level:3},{value:"DataFrame",id:"dataframe",level:2},{value:"Schema and attributes",id:"schema-and-attributes-1",level:3},{value:"DataFrame structure",id:"dataframe-structure",level:3},{value:"Embeddings",id:"embeddings",level:2},{value:"LanguageModel",id:"languagemodel",level:2},{value:"Memory",id:"memory",level:2},{value:"Message",id:"message",level:2},{value:"Schema, structure, and attributes",id:"schema-structure-and-attributes",level:3},{value:"Message data in Input and Output components",id:"message-data-in-input-and-output-components",level:3},{value:"Tool",id:"tool",level:2},{value:"Unknown or multiple types",id:"unknown-or-multiple-types",level:2},{value:"View data types in flows",id:"view-data-types-in-flows",level:2},{value:"See also",id:"see-also",level:2}];function x(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:o}=t;return u||j("CH",!1),u.Code||j("CH.Code",!0),o||j("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,s.jsx)(t.p,{children:"Langflow components are designed to accept and produce specific types of inputs and outputs.\nInput and output data types define the structure and flow of information between components.\nUnderstanding these structures helps you build applications that provide valid input and correctly anticipate the output format."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/concepts-components#component-ports",children:"Component ports"})," represent the data types that each component can send and receive.\nSome data types are self-evident from the fields they are attached to; for example, a ",(0,s.jsx)(t.strong,{children:"System Message"})," field accepts ",(0,s.jsx)(t.a,{href:"#message",children:"message data"}),".\n",(0,s.jsx)(t.a,{href:"/concepts-components#port-colors",children:"Port colors"})," also indicate the port's data type.\nFor example ",(0,s.jsx)(t.strong,{children:"Data"})," ports, represented by ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Red data port",style:{color:"#dc2626",fill:"#dc2626"}}),", either accept or emit ",(0,s.jsx)(t.a,{href:"#data",children:"structured data objects"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"When building flows, connect output ports to input ports of the same type (color) to transfer that type of data between two components."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In the ",(0,s.jsx)(t.a,{href:"/concepts-overview#workspace",children:"workspace"}),", hover over a port to see connection details for that port."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Click a port to filter the ",(0,s.jsx)(t.strong,{children:"Components"})," menu by compatible components."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["If two components have incompatible data types, you can use a processing component like the ",(0,s.jsxs)(t.a,{href:"/components-processing#type-convert",children:[(0,s.jsx)(t.strong,{children:"Type Convert"})," component"]})," to convert the data between components."]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"data",children:"Data"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Data"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Red data port",style:{color:"#dc2626",fill:"#dc2626"}})," accept or produce the ",(0,s.jsx)(t.code,{children:"Data"})," type, which is a structured data object, like a JSON payload that you might send to an API.\nThis data type is used to pass key-value pairs between components, such as user profiles, settings, or other structured information."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Data"})," objects include a primary text field, indicated by a ",(0,s.jsx)(t.code,{children:"text_key"}),", and additional metadata."]}),"\n",(0,s.jsx)(t.h3,{id:"schema-and-attributes",children:"Schema and attributes"}),"\n",(0,s.jsxs)(t.p,{children:["The schema is defined in ",(0,s.jsx)(t.a,{href:"https://github.com/langflow-ai/langflow/blob/main/src/backend/base/langflow/schema/data.py",children:(0,s.jsx)(t.code,{children:"data.py"})}),"."]}),"\n",(0,s.jsx)(t.p,{children:"The following attributes are available:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"data"}),": A ",(0,s.jsx)(t.code,{children:"Data"})," object stores key-value pairs within the ",(0,s.jsx)(t.code,{children:".data"})," attribute. This is the ",(0,s.jsx)(t.code,{children:"Data"})," object's core dictionary. Each key is a field name, and the values can be any supported data type."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"text_key"}),": The key in ",(0,s.jsx)(t.code,{children:"data"})," that is considered the primary text value."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_value"}),": Fallback if ",(0,s.jsx)(t.code,{children:"text_key"})," is missing. The default ",(0,s.jsx)(t.code,{children:"text_key"})," is ",(0,s.jsx)(t.code,{children:'"text"'}),"."]}),"\n"]}),"\n",(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"data_obj ",props:{style:{color:"#C9D1D9"}}},{content:"=",props:{style:{color:"#FF7B72"}}},{content:" Data(",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"    text_key",props:{style:{color:"#FFA657"}}},{content:"=",props:{style:{color:"#FF7B72"}}},{content:'"text"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"    data",props:{style:{color:"#FFA657"}}},{content:"=",props:{style:{color:"#FF7B72"}}},{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'        "text"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Hello world"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'        "name"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Charlie"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'        "age"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"28",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"    },",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"    default_value",props:{style:{color:"#FFA657"}}},{content:"=",props:{style:{color:"#FF7B72"}}},{content:'""',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:")",props:{style:{color:"#C9D1D9"}}}]}],lang:"python"},annotations:[]}]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Data"})," objects can be serialized to JSON, created from JSON, or created from other dictionary data.\nHowever, the resulting ",(0,s.jsx)(t.code,{children:"Data"})," object is a structured object with validation and methods, not a plain dictionary.\nFor example, when serialized into JSON, the previous Python example becomes the following JSON object:"]}),"\n",(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "text_key"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"text"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "data"',props:{style:{color:"#7EE787"}}},{content:": {",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "text"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Hello world"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Charlie"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "age"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"28",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"  },",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "default_value"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n",(0,s.jsx)(t.h2,{id:"dataframe",children:"DataFrame"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"DataFrame"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Pink dataframe port",style:{color:"#ec4899",fill:"#ec4899"}})," accept or produce ",(0,s.jsx)(t.a,{href:"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html",children:"pandas DataFrames"}),", which are similar to the tabular CSV data."]}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"DataFrame"})," type to work with data containing multiple rows or records."]}),"\n",(0,s.jsx)(t.h3,{id:"schema-and-attributes-1",children:"Schema and attributes"}),"\n",(0,s.jsxs)(t.p,{children:["The schema is defined in ",(0,s.jsx)(t.a,{href:"https://github.com/langflow-ai/langflow/blob/main/src/backend/base/langflow/schema/dataframe.py",children:(0,s.jsx)(t.code,{children:"dataframe.py"})}),"."]}),"\n",(0,s.jsx)(t.p,{children:"The following attributes are available:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Full pandas compatibility"}),": All pandas DataFrame methods and functionality are supported"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Langflow integration"}),": Accepts lists of ",(0,s.jsxs)(t.a,{href:"#data",children:[(0,s.jsx)(t.code,{children:"Data"})," objects"]}),", dictionaries, or existing DataFrames."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Convenience methods"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"to_data_list()"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"add_row()"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"add_rows()"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"to_lc_documents()"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"to_data()"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"to_message()"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Text key support"}),": Maintains ",(0,s.jsx)(t.code,{children:"text_key"})," and ",(0,s.jsx)(t.code,{children:"default_value"})," attributes for ",(0,s.jsxs)(t.a,{href:"#data",children:[(0,s.jsx)(t.code,{children:"Data"})," object"]})," compatibility."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"dataframe-structure",children:"DataFrame structure"}),"\n",(0,s.jsx)(t.p,{children:"A DataFrame has a tabular data structure with rows and columns.\nKeys are columns, and each object in the array is a row."}),"\n",(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"[",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"  {",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Charlie Lastname"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "age"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"28",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "email"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"charlie.lastname@example.com"',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"  },",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"  {",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Alexandra Example"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "age"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"34",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "email"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"alexandra@example.com"',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"  }",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"]",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n",(0,s.jsx)(t.p,{children:"When represented as tabular data, the preceding DataFrame object is structured as follows:"}),"\n",(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"| name | age | email |",props:{}}]},{tokens:[{content:"|------|-----|-------|",props:{}}]},{tokens:[{content:"| Charlie Lastname | 28 | charlie.lastname@example.com |",props:{}}]},{tokens:[{content:"| Alexandra Example | 34 | alexandra@example.com |",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,s.jsx)(t.h2,{id:"embeddings",children:"Embeddings"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Embeddings"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Emerald embeddings port",style:{color:"#10b981",fill:"#10b981"}})," emit or ingest vector embeddings to support functions like similarity search."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Embeddings"})," data type is used specifically by components that either produce or consume vector embeddings, such as the ",(0,s.jsxs)(t.a,{href:"/components-embedding-models",children:[(0,s.jsx)(t.strong,{children:"Embedding Model"})," components"]})," and ",(0,s.jsxs)(t.a,{href:"/components-vector-stores",children:[(0,s.jsx)(t.strong,{children:"Vector Store"})," components"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, ",(0,s.jsx)(t.strong,{children:"Embedding Model"})," components output ",(0,s.jsx)(t.code,{children:"Embeddings"})," data that you can connect to an ",(0,s.jsx)(t.strong,{children:"Embedding"})," input port on a ",(0,s.jsx)(t.strong,{children:"Vector Store"})," component."]}),"\n",(0,s.jsxs)(t.p,{children:["For information about the underlying Python classes that produce ",(0,s.jsx)(t.code,{children:"Embeddings"}),", see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/integrations/text_embedding/",children:"LangChain Embedding models documentation"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"languagemodel",children:"LanguageModel"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"LanguageModel"})," type is a specific data type that can be produced by ",(0,s.jsx)(t.strong,{children:"Language Model"})," components and accepted by components that use an LLM."]}),"\n",(0,s.jsxs)(t.p,{children:["When you change a ",(0,s.jsx)(t.strong,{children:"Language Model"})," component's output type from ",(0,s.jsx)(t.strong,{children:"Model Response"})," to ",(0,s.jsx)(t.strong,{children:"Language Model"}),", the component's output port changes from a ",(0,s.jsx)(t.strong,{children:"Message"})," port to a ",(0,s.jsx)(t.strong,{children:"Language Model"})," port ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Fuchsia language model port",style:{color:"#c026d3",fill:"#c026d3"}}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Then, you connect the outgoing ",(0,s.jsx)(t.strong,{children:"Language Model"})," port to a ",(0,s.jsx)(t.strong,{children:"Language Model"})," input port on a compatible component, such as a ",(0,s.jsx)(t.strong,{children:"Smart Function"})," component."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information about using these components in flows and toggling ",(0,s.jsx)(t.code,{children:"LanguageModel"})," output, see ",(0,s.jsxs)(t.a,{href:"/components-models#language-model-output-types",children:[(0,s.jsx)(t.strong,{children:"Language Model"})," components"]}),"."]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"LanguageModel is an instance of LangChain ChatModel"}),(0,s.jsxs)(t.p,{children:["Because Langflow is built on LangChain, ",(0,s.jsx)(t.code,{children:"LanguageModel"})," is actually an instance of a ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/concepts/chat_models/",children:"LangChain chat model"})," that uses the configuration parameters set in the originating component."]}),(0,s.jsxs)(t.p,{children:["Often, components produce an instance of an ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/integrations/chat/",children:"integrated chat model"})," that is designed to support the specific model provider, such as ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/integrations/chat/openai/",children:(0,s.jsx)(t.code,{children:"ChatOpenAI"})})," or ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/integrations/chat/anthropic/",children:(0,s.jsx)(t.code,{children:"ChatAnthropic"})}),"."]}),(0,s.jsxs)(t.p,{children:["You can inspect the ",(0,s.jsx)(t.a,{href:"/concepts-components#component-code",children:"component code"})," to see the specific ",(0,s.jsx)(t.code,{children:"Chat"})," instance it produces."]})]}),"\n",(0,s.jsx)(t.h2,{id:"memory",children:"Memory"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Memory"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Orange memory port",style:{color:"#f97316",fill:"#f97316"}})," are used to integrate a ",(0,s.jsx)(t.strong,{children:"Message History"})," component with external chat memory storage."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see the ",(0,s.jsxs)(t.a,{href:"/components-helpers#message-history",children:[(0,s.jsx)(t.strong,{children:"Message History"})," component"]}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"message",children:"Message"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Message"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Indigo message port",style:{color:"#4f46e5",fill:"#4f46e5"}})," accept or produce ",(0,s.jsx)(t.code,{children:"Message"})," data, which extends the ",(0,s.jsxs)(t.a,{href:"#data",children:[(0,s.jsx)(t.code,{children:"Data"})," type"]})," with additional fields and methods for text input typically used in chat flows."]}),"\n",(0,s.jsx)(t.p,{children:"This data type is used by many components."}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsxs)(t.p,{children:["Components that accept or produce ",(0,s.jsx)(t.code,{children:"Message"})," data may not include all attributes in the incoming or outgoing ",(0,s.jsx)(t.code,{children:"Message"})," data.\nAs long as the data is compatible with the ",(0,s.jsx)(t.code,{children:"Message"})," schema, it can be valid."]}),(0,s.jsx)(t.p,{children:"When building flows, focus on the fields shown on each component in the workspace, rather than the data types passed between components.\nThe details of a particular data type are often only relevant when you are debugging a flow or component that isn't producing the expected output."}),(0,s.jsxs)(t.p,{children:["For example, a ",(0,s.jsx)(t.strong,{children:"Chat Input"})," component only requires the content of the ",(0,s.jsx)(t.strong,{children:"Input Text"})," (",(0,s.jsx)(t.code,{children:"input_value"}),") field.\nThe component then constructs a complete ",(0,s.jsx)(t.code,{children:"Message"})," object before passing the data to other components in the flow."]})]}),"\n",(0,s.jsx)(t.h3,{id:"schema-structure-and-attributes",children:"Schema, structure, and attributes"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Message"})," schema is defined in ",(0,s.jsx)(t.a,{href:"https://github.com/langflow-ai/langflow/blob/main/src/backend/base/langflow/schema/message.py",children:(0,s.jsx)(t.code,{children:"message.py"})}),".\nSome ",(0,s.jsx)(t.code,{children:"Message"})," attributes have their own schema definitions, such as ",(0,s.jsx)(t.a,{href:"https://github.com/langflow-ai/langflow/blob/main/src/backend/base/langflow/schema/content_block.py",children:(0,s.jsx)(t.code,{children:"content_block.py"})}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Message"})," data is structured as a JSON object.\nFor example:"]}),"\n",(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "text"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Name: Charlie Lastname, Age: 28, Email: charlie.lastname@example.com"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "sender"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"User"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "sender_name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Charlie Lastname"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "session_id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"some-session-id"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "timestamp"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"2024-06-01T12:00:00Z"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "files"',props:{style:{color:"#7EE787"}}},{content:": [],",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "content_blocks"',props:{style:{color:"#7EE787"}}},{content:": [],",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "category"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"message"',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n",(0,s.jsxs)(t.p,{children:["The attributes included in a specific ",(0,s.jsx)(t.code,{children:"Message"})," object depend on the context, including the component type, flow activity, and whether the message is a query or response.\nSome common attributes include the following:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"text"}),": The main message content."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"sender"}),": Identifies the originator of a chat message as either ",(0,s.jsx)(t.code,{children:"User"})," or ",(0,s.jsx)(t.code,{children:"Language Model"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"sender_name"}),": The display name for the sender. Defaults to ",(0,s.jsx)(t.code,{children:"User"})," or ",(0,s.jsx)(t.code,{children:"Language Model"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"session_id"}),": The chat ",(0,s.jsx)(t.a,{href:"/session-id",children:"session identifier"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"flow_id"}),": The ID of the flow that the message is associated with. ",(0,s.jsx)(t.code,{children:"flow_id"})," and ",(0,s.jsx)(t.code,{children:"session_id"})," are the same if the flow doesn't use custom session IDs."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"timestamp"}),": The UTC timestamp that the message was sent."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"files"}),": A list of file paths or images included with the message"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"content_blocks"}),": Container for rich content input, such as text, media, or code. Also contains error message information if the LLM can't process the input."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"category"}),": ",(0,s.jsx)(t.code,{children:'"message"'}),", ",(0,s.jsx)(t.code,{children:'"error"'}),", ",(0,s.jsx)(t.code,{children:'"warning"'}),", or ",(0,s.jsx)(t.code,{children:'"info"'}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Not all attributes are required, and some components accept message-compatible input, such as raw text input.\nThe strictness depends on the component."}),"\n",(0,s.jsx)(t.h3,{id:"message-data-in-input-and-output-components",children:"Message data in Input and Output components"}),"\n",(0,s.jsxs)(t.p,{children:["In flows with ",(0,s.jsxs)(t.a,{href:"/components-io#chat-io",children:[(0,s.jsx)(t.strong,{children:"Chat Input and Output"})," components"]}),", ",(0,s.jsx)(t.code,{children:"Message"})," data provides a consistent structure for chat interactions, and it is ideal for chatbots, conversational analysis, and other use cases based on a dialogue with an LLM or agent.\nIn these flows, the ",(0,s.jsx)(t.strong,{children:"Playground"})," chat interface prints only the ",(0,s.jsx)(t.code,{children:"Message"})," attributes that are relevant to the conversation, such as ",(0,s.jsx)(t.code,{children:"text"}),", ",(0,s.jsx)(t.code,{children:"files"}),", and error messages from ",(0,s.jsx)(t.code,{children:"content_blocks"}),".\nTo see all ",(0,s.jsx)(t.code,{children:"Message"})," attributes, inspect the message logs in the ",(0,s.jsx)(t.strong,{children:"Playground"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In flows with ",(0,s.jsxs)(t.a,{href:"/components-io#text-io",children:[(0,s.jsx)(t.strong,{children:"Text Input and Output"})," components"]}),", ",(0,s.jsx)(t.code,{children:"Message"})," data is used to pass simple text strings without the chat-related metadata.\nThese components handle ",(0,s.jsx)(t.code,{children:"Message"})," data as independent text strings, not as part of an ongoing conversation.\nFor this reason, a flow with only ",(0,s.jsx)(t.strong,{children:"Text Input and Output"})," components isn't compatible with the ",(0,s.jsx)(t.strong,{children:"Playground"}),".\nFor more information, see ",(0,s.jsxs)(t.a,{href:"/components-io",children:[(0,s.jsx)(t.strong,{children:"Input and Output"})," components"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["When using the Langflow API, the response includes the ",(0,s.jsx)(t.code,{children:"Message"})," object along with other response data from the flow run.\nLangflow API responses can be extremely verbose, so your applications must include code to extract relevant data from the response to return to the user.\nFor an example, see the ",(0,s.jsx)(t.a,{href:"/get-started-quickstart",children:"Langflow quickstart"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Additionally, input sent to the input port of input/output components does ",(0,s.jsx)(t.em,{children:"not"})," need to be a complete ",(0,s.jsx)(t.code,{children:"Message"})," object because the component constructs the ",(0,s.jsx)(t.code,{children:"Message"})," object that is then passed to other components in the flow or returned as flow output.\nIn fact, some components shouldn't receive a complete ",(0,s.jsx)(t.code,{children:"Message"})," object because some attributes, like ",(0,s.jsx)(t.code,{children:"timestamp"})," should be added by the component for accuracy."]}),"\n",(0,s.jsx)(t.h2,{id:"tool",children:"Tool"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Tool"})," ports ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Cyan tool port",style:{color:"#06b6d4",fill:"#06b6d4"}})," connect tools to an ",(0,s.jsx)(t.strong,{children:"Agent"})," component."]}),"\n",(0,s.jsxs)(t.p,{children:["Tools can be other components where you enabled ",(0,s.jsx)(t.strong,{children:"Tool Mode"}),", they can be the dedicated ",(0,s.jsx)(t.strong,{children:"MCP Tools"})," component, or they can be other components that only support ",(0,s.jsx)(t.strong,{children:"Tool Mode"}),".\nMultiple tools can be connected to the same ",(0,s.jsx)(t.strong,{children:"Agent"})," component at the same port."]}),"\n",(0,s.jsxs)(t.p,{children:["Functionally, ",(0,s.jsx)(t.code,{children:"Tool"})," data is a LangChain ",(0,s.jsx)(t.code,{children:"StructuredTool"})," object that can be used in agent flows."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information, see ",(0,s.jsx)(t.a,{href:"/agents-tools",children:"Configure tools for agents"})," and ",(0,s.jsx)(t.a,{href:"/mcp-client",children:"Use Langflow as an MCP client"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"unknown-or-multiple-types",children:"Unknown or multiple types"}),"\n",(0,s.jsxs)(t.p,{children:["If a port can accept or produce multiple data types, it is represented by the gray port icon ",(0,s.jsx)(i.A,{name:"Circle",size:"16","aria-label":"Gray unknown port",style:{color:"#9CA3AF",fill:"#9CA3AF"}}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Hover over the port to see the accepted or produced data types."}),"\n",(0,s.jsx)(t.h2,{id:"view-data-types-in-flows",children:"View data types in flows"}),"\n",(0,s.jsxs)(t.p,{children:["In Langflow, you can use ",(0,s.jsx)(i.A,{name:"TextSearch","aria-hidden":"True"})," ",(0,s.jsx)(t.strong,{children:"Inspect output"})," to view the output of individual components.\nThis can help you learn about the different data type and debug problems with invalid or malformed inputs and output."]}),"\n",(0,s.jsxs)(t.p,{children:["The following example shows how to inspect the output of a ",(0,s.jsxs)(t.a,{href:"/components-processing#type-convert",children:[(0,s.jsx)(t.strong,{children:"Type Convert"})," component"]}),", which can convert data from one type to another:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Create a flow, and then connect a ",(0,s.jsx)(t.strong,{children:"Chat Input"})," component to a ",(0,s.jsx)(t.strong,{children:"Type Convert"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In the ",(0,s.jsx)(t.strong,{children:"Chat Input"})," component, enter some text for the type converter to process."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["On the ",(0,s.jsx)(t.strong,{children:"Type Convert"})," component, click ",(0,s.jsx)(i.A,{name:"Play","aria-hidden":"true"})," ",(0,s.jsx)(t.strong,{children:"Run component"}),", and then click ",(0,s.jsx)(i.A,{name:"TextSearch","aria-hidden":"True"})," ",(0,s.jsx)(t.strong,{children:"Inspect output"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The default output is ",(0,s.jsx)(t.code,{children:"Message"})," data, which is the same as the input coming from the ",(0,s.jsx)(t.strong,{children:"Chat Input"})," component.\nTo see the ",(0,s.jsx)(t.code,{children:"Message"})," data converted to ",(0,s.jsx)(t.code,{children:"Data"})," or ",(0,s.jsx)(t.code,{children:"DataFrame"}),", change the ",(0,s.jsx)(t.strong,{children:"Output Type"})," on the ",(0,s.jsx)(t.strong,{children:"Type Convert"})," component, and then rerun the component."]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"Message",label:"Message",default:!0,children:(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"Input text",props:{}}]}],lang:"text"},annotations:[]}]})}),(0,s.jsx)(l.A,{value:"Data",label:"Data",children:(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"{",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "timestamp"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"2025-07-15 20:56:20 UTC"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "sender"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"User"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "sender_name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"User"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "session_id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"a0c7e888-4fd6-4242-b8c8-e761ad690aeb"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "text"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "files"',props:{style:{color:"#7EE787"}}},{content:": [],",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "error"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"false",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "edit"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"false",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "properties"',props:{style:{color:"#7EE787"}}},{content:": {",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "text_color"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "background_color"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "edited"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"false",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "source"',props:{style:{color:"#7EE787"}}},{content:": {",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'      "id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"null",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'      "display_name"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"null",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'      "source"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"null",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"    },",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "icon"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'""',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "allow_markdown"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"false",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "positive_feedback"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"null",props:{style:{color:"#79C0FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "state"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"complete"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'    "targets"',props:{style:{color:"#7EE787"}}},{content:": []",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"  },",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "category"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"message"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "content_blocks"',props:{style:{color:"#7EE787"}}},{content:": [],",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"9da72da2-efbb-4ccd-90ad-b32429b0418e"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "flow_id"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"a0c7e888-4fd6-4242-b8c8-e761ad690aeb"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'  "duration"',props:{style:{color:"#7EE787"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:"null",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"}",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]})}),(0,s.jsx)(l.A,{value:"DataFrame",label:"DataFrame",children:(0,s.jsx)(u.Code,{codeConfig:m,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"| Field | Value |",props:{}}]},{tokens:[{content:"|-------|-------|",props:{}}]},{tokens:[{content:"| timestamp | 2025-07-15 20:56:11 UTC |",props:{}}]},{tokens:[{content:"| sender | User |",props:{}}]},{tokens:[{content:"| sender_name | User |",props:{}}]},{tokens:[{content:"| session_id | a0c7e888-4fd6-4242-b8c8-e761ad690aeb |",props:{}}]},{tokens:[{content:"| text | (empty) |",props:{}}]},{tokens:[{content:"| files | [] |",props:{}}]},{tokens:[{content:"| error | False |",props:{}}]},{tokens:[{content:"| edit | False |",props:{}}]},{tokens:[{content:"| properties | text_color: '', background_color: '', edited: False, source: {id: None, display_name: None, source: None}, icon: '', allow_markdown: False, positive_feedback: None, state: 'complete', targets: [] |",props:{}}]},{tokens:[{content:"| category | message |",props:{}}]},{tokens:[{content:"| content_blocks | [] |",props:{}}]},{tokens:[{content:"| id | 341686eb-7a39-4b80-a90a-d8bf267815ef |",props:{}}]},{tokens:[{content:"| flow_id | a0c7e888-4fd6-4242-b8c8-e761ad690aeb |",props:{}}]},{tokens:[{content:"| duration | (empty) |",props:{}}]}],lang:"text"},annotations:[]}]})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsxs)(t.a,{href:"/components-processing",children:[(0,s.jsx)(t.strong,{children:"Processing"})," components"]})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/components-custom-components",children:"Custom components"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.pydantic.dev/latest/api/base_model/",children:"Pydantic Models"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html",children:"pandas.DataFrame"})}),"\n"]})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}function j(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);