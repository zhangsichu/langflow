"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[9781],{17886:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var r=n(64058),s=n(74848);function i({name:e,...t}){const n=r[e];return n?(0,s.jsx)(n,{...t}):null}},74215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Components/bundles-langchain","title":"LangChain","description":"Bundles contain custom components that support specific third-party integrations with Langflow.","source":"@site/docs/Components/bundles-langchain.mdx","sourceDirName":"Components","slug":"/bundles-langchain","permalink":"/bundles-langchain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"LangChain","slug":"/bundles-langchain"},"sidebar":"docs","previous":{"title":"Icosa Computing","permalink":"/bundles-icosacomputing"},"next":{"title":"LM Studio","permalink":"/bundles-lmstudio"}}');var s=n(74848),i=n(28453);n(17886);const a={title:"LangChain",slug:"/bundles-langchain"},l=void 0,d={},h=[{value:"CSV Agent",id:"csv-agent",level:2},{value:"CSV Agent parameters",id:"csv-agent-parameters",level:3},{value:"OpenAI Tools Agent",id:"openai-tools-agent",level:2},{value:"OpenAI Tools Agent parameters",id:"openai-tools-agent-parameters",level:3},{value:"OpenAPI Agent",id:"openapi-agent",level:2},{value:"OpenAPI Agent parameters",id:"openapi-agent-parameters",level:3},{value:"Prompt Hub",id:"prompt-hub",level:2},{value:"Prompt Hub parameters",id:"prompt-hub-parameters",level:3},{value:"SQL Agent",id:"sql-agent",level:2},{value:"SQL Agent parameters",id:"sql-agent-parameters",level:3},{value:"SQL Database",id:"sql-database",level:2},{value:"Text Splitters",id:"text-splitters",level:2},{value:"Tool Calling Agent",id:"tool-calling-agent",level:2},{value:"Tool Calling Agent parameters",id:"tool-calling-agent-parameters",level:3},{value:"XML Agent",id:"xml-agent",level:2},{value:"XML Agent parameters",id:"xml-agent-parameters",level:3},{value:"Other LangChain components",id:"other-langchain-components",level:2},{value:"Legacy LangChain components",id:"legacy-langchain-components",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/components-bundle-components",children:"Bundles"})," contain custom components that support specific third-party integrations with Langflow."]}),"\n",(0,s.jsxs)(t.p,{children:["This page describes the components that are available in the ",(0,s.jsx)(t.strong,{children:"LangChain"})," bundle."]}),"\n",(0,s.jsx)(t.h2,{id:"csv-agent",children:"CSV Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates a CSV agent from a CSV file and LLM.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/api_reference/experimental/agents/langchain_experimental.agents.agent_toolkits.csv.base.create_csv_agent.html",children:"LangChain CSV agent documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"csv-agent-parameters",children:"CSV Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"path"}),(0,s.jsx)(t.td,{children:"File"}),(0,s.jsx)(t.td,{children:"Input parameter. The path to the CSV file."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent_type"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The type of agent to create."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The CSV agent instance."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"openai-tools-agent",children:"OpenAI Tools Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates an OpenAI Tools Agent.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://api.python.langchain.com/en/latest/agents/langchain.agents.openai_functions_agent.base.create_openai_functions_agent.html",children:"LangChain OpenAI agent documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"openai-tools-agent-parameters",children:"OpenAI Tools Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List of Tools"}),(0,s.jsx)(t.td,{children:"Input parameter. The tools to give the agent access to."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"system_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The system prompt to provide context to the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"input_value"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The user's input to the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"memory"}),(0,s.jsx)(t.td,{children:"Memory"}),(0,s.jsx)(t.td,{children:"Input parameter. The memory for the agent to use for context persistence."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_iterations"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The maximum number of iterations to allow the agent to execute."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to print out the agent's intermediate steps."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"handle_parsing_errors"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to handle parsing errors in the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The OpenAI Tools agent instance."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"output"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Output parameter. The output from executing the agent on the input."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"openapi-agent",children:"OpenAPI Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates an agent for interacting with OpenAPI services.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/integrations/tools/openapi/",children:"LangChain OpenAPI toolkit documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"openapi-agent-parameters",children:"OpenAPI Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"openapi_spec"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The OpenAPI specification for the service."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"base_url"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The base URL for the API."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"headers"}),(0,s.jsx)(t.td,{children:"Dict"}),(0,s.jsx)(t.td,{children:"Input parameter. The optional headers for API requests."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent_executor_kwargs"}),(0,s.jsx)(t.td,{children:"Dict"}),(0,s.jsx)(t.td,{children:"Input parameter. The optional parameters for the agent executor."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter.The OpenAPI agent instance."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"prompt-hub",children:"Prompt Hub"}),"\n",(0,s.jsxs)(t.p,{children:["This component fetches prompts from the ",(0,s.jsx)(t.a,{href:"https://docs.smith.langchain.com/old/category/prompt-hub",children:"LangChain Hub"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Like the ",(0,s.jsxs)(t.a,{href:"/components-prompts",children:[(0,s.jsx)(t.strong,{children:"Prompt Template"})," core component"]}),", additional fields are added to the component for each variable in the prompt.\nFor example, the default prompt ",(0,s.jsx)(t.code,{children:"efriis/my-first-prompt"})," adds fields for ",(0,s.jsx)(t.code,{children:"profession"})," and ",(0,s.jsx)(t.code,{children:"question"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"prompt-hub-parameters",children:"Prompt Hub parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Display Name"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"langchain_api_key"}),(0,s.jsx)(t.td,{children:"Your LangChain API Key"}),(0,s.jsx)(t.td,{children:"Input parameter. The LangChain API Key to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"langchain_hub_prompt"}),(0,s.jsx)(t.td,{children:"LangChain Hub Prompt"}),(0,s.jsx)(t.td,{children:"Input parameter. The LangChain Hub prompt to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"prompt"}),(0,s.jsx)(t.td,{children:"Build Prompt"}),(0,s.jsxs)(t.td,{children:["Output parameter. The built prompt message returned by the ",(0,s.jsx)(t.code,{children:"build_prompt"})," method."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"sql-agent",children:"SQL Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates an agent for interacting with SQL databases.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/tutorials/sql_qa/",children:"LangChain SQL agent documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"sql-agent-parameters",children:"SQL Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"database"}),(0,s.jsx)(t.td,{children:"Database"}),(0,s.jsx)(t.td,{children:"Input parameter. The SQL database connection."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"top_k"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The number of results to return from a SELECT query."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"use_tools"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to use tools for query execution."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"return_intermediate_steps"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to return the agent's intermediate steps."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_iterations"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The maximum number of iterations to run the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_execution_time"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The maximum execution time in seconds."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"early_stopping_method"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The method to use for early stopping."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to print the agent's thoughts."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The SQL agent instance."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"sql-database",children:"SQL Database"}),"\n",(0,s.jsxs)(t.p,{children:["The LangChain ",(0,s.jsx)(t.strong,{children:"SQL Database"})," component establishes a connection to an SQL database."]}),"\n",(0,s.jsxs)(t.p,{children:["This component is different from the ",(0,s.jsxs)(t.a,{href:"/components-data#sql-database",children:[(0,s.jsx)(t.strong,{children:"SQL Database"})," core component"]}),", which executes SQL queries on SQLAlchemy-compatible databases."]}),"\n",(0,s.jsx)(t.h2,{id:"text-splitters",children:"Text Splitters"}),"\n",(0,s.jsx)(t.p,{children:"The LangChain bundle includes the following text splitter components:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Character Text Splitter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Language Recursive Text Splitter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Natural Language Text Splitter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Recursive Character Text Splitter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Semantic Text Splitter"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"tool-calling-agent",children:"Tool Calling Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates an agent for structured tool calling with various language models.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/docs/concepts/tool_calling/",children:"LangChain tool calling documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"tool-calling-agent-parameters",children:"Tool Calling Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"Input parameter. The list of tools available to the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"system_message"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The system message to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"return_intermediate_steps"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to return the agent's intermediate steps."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_iterations"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The maximum number of iterations to run the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_execution_time"}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Input parameter. The maximum execution time in seconds."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"early_stopping_method"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The method to use for early stopping."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"verbose"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"Input parameter. This determines whether to print the agent's thoughts."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The tool calling agent instance."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"xml-agent",children:"XML Agent"}),"\n",(0,s.jsxs)(t.p,{children:["This component is based on the ",(0,s.jsxs)(t.a,{href:"/agents",children:[(0,s.jsx)(t.strong,{children:"Agent"})," core component"]}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This component creates an XML Agent using LangChain.\nThe agent uses XML formatting for tool instructions to the LLM.\nFor more information, see the ",(0,s.jsx)(t.a,{href:"https://python.langchain.com/api_reference/langchain/agents/langchain.agents.xml.base.XMLAgent.html",children:"LangChain XML Agent documentation"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"xml-agent-parameters",children:"XML Agent parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_prompt"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Input parameter. The custom prompt template for the agent with XML formatting instructions."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tools"}),(0,s.jsx)(t.td,{children:"List[Tool]"}),(0,s.jsx)(t.td,{children:"Input parameter. The list of tools available to the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The XML Agent instance."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"other-langchain-components",children:"Other LangChain components"}),"\n",(0,s.jsx)(t.p,{children:"Other components in the LangChain bundle include the following:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Fake Embeddings"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"HTML Link Extractor"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Runnable Executor"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Spider Web Crawler & Scraper"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"legacy-langchain-components",children:"Legacy LangChain components"}),"\n",(0,s.jsx)(t.p,{children:"The following LangChain components are considered legacy.\nYou can still use these components in your flows, but they are no longer maintained and they can be removed in future releases."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Conversation Chain"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"LLM Checker Chain"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"LLM Math Chain"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Natural Language to SQL"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Retrieval QA"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Self Query Retriever"})}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"JSON Agent"}),(0,s.jsx)(t.p,{children:"This component creates a JSON agent from a JSON or YAML file and an LLM."}),(0,s.jsx)(t.p,{children:"It accepts the following parameters:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"path"}),(0,s.jsx)(t.td,{children:"File"}),(0,s.jsx)(t.td,{children:"Input parameter. The path to the JSON or YAML file."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The JSON agent instance."})]})]})]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Vector Store Info/Agent"}),(0,s.jsx)(t.p,{children:"This component creates a Vector Store Agent using LangChain."}),(0,s.jsx)(t.p,{children:"It accepts the following parameters:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"vectorstore"}),(0,s.jsx)(t.td,{children:"VectorStoreInfo"}),(0,s.jsx)(t.td,{children:"Input parameter. The vector store information for the agent to use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The Vector Store Agent instance."})]})]})]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"VectorStoreRouterAgent"}),(0,s.jsx)(t.p,{children:"This component creates a Vector Store Router Agent using LangChain."}),(0,s.jsx)(t.p,{children:"It accepts the following parameters:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"llm"}),(0,s.jsx)(t.td,{children:"LanguageModel"}),(0,s.jsx)(t.td,{children:"Input parameter. The language model to use for the agent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"vectorstores"}),(0,s.jsx)(t.td,{children:"List[VectorStoreInfo]"}),(0,s.jsx)(t.td,{children:"Input parameter. The list of vector store information for the agent to route between."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"agent"}),(0,s.jsx)(t.td,{children:"AgentExecutor"}),(0,s.jsx)(t.td,{children:"Output parameter. The Vector Store Router Agent instance."})]})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);