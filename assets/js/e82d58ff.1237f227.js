"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[5657],{17835:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/assemblyai-components-b88c7c97e04114bf658898f7fc633e23.png"},17886:(e,n,s)=>{s.d(n,{A:()=>l});s(96540);var t=s(64058),i=s(74848);function l({name:e,...n}){const s=t[e];return s?(0,i.jsx)(s,{...n}):null}},28618:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/files/AssemblyAI_Flow-368be24ae9542f0b8b5253cc9d97b42f.json"},91044:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"Integrations/integrations-assemblyai","title":"AssemblyAI","description":"The AssemblyAI components allow you to apply powerful Speech AI models to your app for tasks like:","source":"@site/docs/Integrations/integrations-assemblyai.mdx","sourceDirName":"Integrations","slug":"/integrations-assemblyai","permalink":"/integrations-assemblyai","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"AssemblyAI","slug":"/integrations-assemblyai"},"sidebar":"docs","previous":{"title":"arXiv","permalink":"/bundles-arxiv"},"next":{"title":"Azure","permalink":"/bundles-azure"}}');var i=s(74848),l=s(28453),r=s(17886);const o={title:"AssemblyAI",slug:"/integrations-assemblyai"},a=void 0,c={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Components",id:"components",level:2},{value:"AssemblyAI Start Transcript",id:"assemblyai-start-transcript",level:3},{value:"AssemblyAI Poll Transcript",id:"assemblyai-poll-transcript",level:3},{value:"AssemblyAI Get Subtitles",id:"assemblyai-get-subtitles",level:3},{value:"AssemblyAI LeMUR",id:"assemblyai-lemur",level:3},{value:"AssemblyAI List Transcripts",id:"assemblyai-list-transcripts",level:3},{value:"Flow Process",id:"flow-process",level:2},{value:"Run the Transcription and Speech AI Flow",id:"run-the-transcription-and-speech-ai-flow",level:2},{value:"Customization",id:"customization",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The AssemblyAI components allow you to apply powerful Speech AI models to your app for tasks like:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Transcribing audio and video files"}),"\n",(0,i.jsx)(n.li,{children:"Formatting transcripts"}),"\n",(0,i.jsx)(n.li,{children:"Generating subtitles"}),"\n",(0,i.jsx)(n.li,{children:"Applying LLMs to audio files"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more information about AssemblyAI features and functionality used by AssemblyAI components, see the ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs",children:"AssemblyAI API Docs"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/dashboard/signup",children:"AssemblyAI account"})," and an AssemblyAI API key."]}),"\n",(0,i.jsxs)(n.p,{children:["Enter the key in the ",(0,i.jsx)(n.em,{children:"AssemblyAI API Key"})," field in all Langflow components that require the AssemblyAI key."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Optional: To use LeMUR, you need a paid AssemblyAI account because LeMUR isn't included in the free account."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"AssemblyAI components",src:s(17835).A+"",width:"1494",height:"1048"})}),"\n",(0,i.jsx)(n.h3,{id:"assemblyai-start-transcript",children:"AssemblyAI Start Transcript"}),"\n",(0,i.jsx)(n.p,{children:"This component allows you to submit an audio or video file for transcription."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tip"}),": You can freeze the path of this component to only submit the file once."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AssemblyAI API Key: Your API key."}),"\n",(0,i.jsx)(n.li,{children:"Audio File: The audio or video file to transcribe."}),"\n",(0,i.jsxs)(n.li,{children:["Speech Model (Optional): Select the class of models. Default is ",(0,i.jsx)(n.em,{children:"Best"}),". See ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs/speech-to-text/speech-recognition#select-the-speech-model-with-best-and-nano",children:"speech models"})," for more info."]}),"\n",(0,i.jsx)(n.li,{children:"Automatic Language Detection (Optional): Enable automatic language detection."}),"\n",(0,i.jsxs)(n.li,{children:["Language (Optional): The language of the audio file. Can be set manually if automatic language detection is disabled.\nSee ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs/getting-started/supported-languages",children:"supported languages"})," for a list of supported language codes."]}),"\n",(0,i.jsx)(n.li,{children:"Enable Speaker Labels (Optional): Detect speakers in an audio file and what each speaker said."}),"\n",(0,i.jsx)(n.li,{children:"Expected Number of Speakers (Optional): Set the expected number of speakers, if Speaker Labels is enabled."}),"\n",(0,i.jsxs)(n.li,{children:["Audio File URL (Optional): The URL of the audio or video file to transcribe. Can be used instead of ",(0,i.jsx)(n.em,{children:"Audio File"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Punctuate (Optional): Apply punctuation. Default is true."}),"\n",(0,i.jsx)(n.li,{children:"Format Text (Optional): Apply casing and text formatting. Default is true."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Transcript ID: The id of the transcript"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"assemblyai-poll-transcript",children:"AssemblyAI Poll Transcript"}),"\n",(0,i.jsx)(n.p,{children:"This components allows you to poll the transcripts. It checks the status of the transcript every few seconds until the transcription is completed."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AssemblyAI API Key: Your API key."}),"\n",(0,i.jsx)(n.li,{children:"Polling Interval (Optional): The polling interval in seconds. Default is 3."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Transcription Result: The AssemblyAI JSON response of a completed transcript. Contains the text and other info."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"assemblyai-get-subtitles",children:"AssemblyAI Get Subtitles"}),"\n",(0,i.jsx)(n.p,{children:"This component allows you to generate subtitles in SRT or VTT format."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AssemblyAI API Key: Your API key."}),"\n",(0,i.jsxs)(n.li,{children:["Transcription Result: The output of the ",(0,i.jsx)(n.strong,{children:"Poll Transcript"})," component."]}),"\n",(0,i.jsx)(n.li,{children:"Subtitle Format: The format of the captions (SRT or VTT)."}),"\n",(0,i.jsx)(n.li,{children:"Character per Caption (Optional): The maximum number of characters per caption (0 for no limit)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Subtitles: A JSON response with the ",(0,i.jsx)(n.code,{children:"subtitles"})," field containing the captions in SRT or VTT format."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"assemblyai-lemur",children:"AssemblyAI LeMUR"}),"\n",(0,i.jsxs)(n.p,{children:["This component allows you to apply Large Language Models to spoken data using the ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs/lemur",children:"AssemblyAI LeMUR framework"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"LeMUR automatically ingests the transcript as additional context, making it easy to apply LLMs to audio data. You can use it for tasks like summarizing audio, extracting insights, or asking questions."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AssemblyAI API Key: Your API key."}),"\n",(0,i.jsxs)(n.li,{children:["Transcription Result: The output of the ",(0,i.jsx)(n.strong,{children:"Poll Transcript"})," component."]}),"\n",(0,i.jsxs)(n.li,{children:["Input Prompt: The text to prompt the model. You can type your prompt in this field or connect it to a ",(0,i.jsx)(n.strong,{children:"Prompt Template"})," component."]}),"\n",(0,i.jsx)(n.li,{children:"Final Model: The model that is used for the final prompt after compression is performed. Default is Claude 3.5 Sonnet."}),"\n",(0,i.jsx)(n.li,{children:"Temperature (Optional): The temperature to use for the model. Default is 0.0."}),"\n",(0,i.jsx)(n.li,{children:"Max Output Size (Optional): Max output size in tokens, up to 4000. Default is 2000."}),"\n",(0,i.jsxs)(n.li,{children:['Endpoint (Optional): The LeMUR endpoint to use. Default is "task". For "summary" and "question-answer", no prompt input is needed. See ',(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs/api-reference/lemur/",children:"LeMUR API docs"})," for more info."]}),"\n",(0,i.jsxs)(n.li,{children:["Questions (Optional): Comma-separated list of your questions. Only used if ",(0,i.jsx)(n.em,{children:"Endpoint"}),' is "question-answer".']}),"\n",(0,i.jsxs)(n.li,{children:["Transcript IDs (Optional): Comma-separated list of transcript IDs. LeMUR can perform actions over multiple transcripts. If provided, the ",(0,i.jsx)(n.em,{children:"Transcription Result"})," is ignored."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"LeMUR Response: The generated LLM response."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"assemblyai-list-transcripts",children:"AssemblyAI List Transcripts"}),"\n",(0,i.jsx)(n.p,{children:"This component can be used as a standalone component to list all previously generated transcripts."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AssemblyAI API Key: Your API key."}),"\n",(0,i.jsx)(n.li,{children:"Limit (Optional): Maximum number of transcripts to retrieve. Default is 20, use 0 for all."}),"\n",(0,i.jsx)(n.li,{children:"Filter (Optional): Filter by transcript status."}),"\n",(0,i.jsx)(n.li,{children:"Created On (Optional): Only get transcripts created on this date (YYYY-MM-DD)."}),"\n",(0,i.jsx)(n.li,{children:"Throttled Only (Optional): Only get throttled transcripts, overrides the status filter"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Transcript List: A list of all transcripts with info such as the transcript ID, the status, and the data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"flow-process",children:"Flow Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The user inputs an audio or video file."}),"\n",(0,i.jsx)(n.li,{children:"The user can also input an LLM prompt. In this example, we want to generate a summary of the transcript."}),"\n",(0,i.jsx)(n.li,{children:"The flow submits the audio file for transcription."}),"\n",(0,i.jsx)(n.li,{children:"The flow checks the status of the transcript every few seconds until transcription is completed."}),"\n",(0,i.jsx)(n.li,{children:"The flow parses the transcription result and outputs the transcribed text."}),"\n",(0,i.jsx)(n.li,{children:"The flow also generates subtitles."}),"\n",(0,i.jsx)(n.li,{children:"The flow applies the LLM prompt to generate a summary."}),"\n",(0,i.jsx)(n.li,{children:"As a standalone component, all transcripts can be listed."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"run-the-transcription-and-speech-ai-flow",children:"Run the Transcription and Speech AI Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Build the flow manually or import a pre-build JSON file:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Recommended: ",(0,i.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(28618).A+"",children:"Download the AssemblyAI Transcription and Speech AI flow JSON"}),", and then ",(0,i.jsx)(n.a,{href:"/concepts-flows-import",children:"import the flow"})," into Langflow."]}),"\n",(0,i.jsx)(n.li,{children:"Create a blank flow, and then add the previously described components to your flow, connecting them as shown in the flow diagram."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Input your AssemblyAI API key in all components that require the key (",(0,i.jsx)(n.strong,{children:"Start Transcript"}),", ",(0,i.jsx)(n.strong,{children:"Poll Transcript"}),", ",(0,i.jsx)(n.strong,{children:"Get Subtitles"}),", ",(0,i.jsx)(n.strong,{children:"LeMUR"}),", ",(0,i.jsx)(n.strong,{children:"List Transcripts"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select an audio or video file for the ",(0,i.jsx)(n.strong,{children:"Start Transcript"})," component."]}),"\n",(0,i.jsxs)(n.p,{children:["Optional: After adding a file to the ",(0,i.jsx)(n.strong,{children:"Start Transcript"})," component, run and ",(0,i.jsx)(n.a,{href:"/concepts-components#freeze-a-component",children:"freeze the component"})," so you only submit the file once, no matter how many times you run the flow.\nTo do this, click ",(0,i.jsx)(r.A,{name:"Play","aria-hidden":"True"})," ",(0,i.jsx)(n.strong,{children:"Run component"})," to preload the file, and then click ",(0,i.jsx)(r.A,{name:"Ellipsis","aria-hidden":"true"})," ",(0,i.jsx)(n.strong,{children:"Show More"})," and select ",(0,i.jsx)(n.strong,{children:"Freeze"})," to lock the result.\nSubsequent flow runs use the frozen component's cached output."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Test the transcription by clicking ",(0,i.jsx)(r.A,{name:"Play","aria-hidden":"True"})," ",(0,i.jsx)(n.strong,{children:"Run component"})," on the ",(0,i.jsx)(n.strong,{children:"Parser"})," component. Make sure that the specified template is ",(0,i.jsx)(n.code,{children:"{text}"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Running one component runs all upstream components as well as the selected component and then stops the flow run.\nIn this case, the ",(0,i.jsx)(n.strong,{children:"Start Transcript"})," and ",(0,i.jsx)(n.strong,{children:"Poll Transcript"})," components are upstream from the ",(0,i.jsx)(n.strong,{children:"Parser"})," component.\nIf you froze the ",(0,i.jsx)(n.strong,{children:"Start Transcript"})," component, the flow sends the cached output from ",(0,i.jsx)(n.strong,{children:"Start Transcript"}),", runs the ",(0,i.jsx)(n.strong,{children:"Poll Transcript"})," component, to get the transcription result.\nCheck the flow logs or inspect the output of the ",(0,i.jsx)(n.strong,{children:"Parser"})," component to see the transcribed text result."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To generate subtitles and run the full flow, click ",(0,i.jsx)(r.A,{name:"Play","aria-hidden":"True"})," ",(0,i.jsx)(n.strong,{children:"Run component"})," on the ",(0,i.jsx)(n.strong,{children:"List Transcript"})," component."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,i.jsx)(n.p,{children:"The flow can be customized by:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Modifying the parameters in the ",(0,i.jsx)(n.strong,{children:"Start Transcript"})," component."]}),"\n",(0,i.jsxs)(n.li,{children:["Modifying the subtitle format in the ",(0,i.jsx)(n.strong,{children:"Get Subtitles"})," component."]}),"\n",(0,i.jsxs)(n.li,{children:["Modifying the LLM prompt for input of the ",(0,i.jsx)(n.strong,{children:"LeMUR"})," component."]}),"\n",(0,i.jsxs)(n.li,{children:["Modifying the LLM parameters (e.g., temperature) in the ",(0,i.jsx)(n.strong,{children:"LeMUR"})," component."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter issues:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure the API key is correctly set in all components that require the key."}),"\n",(0,i.jsx)(n.li,{children:"To use LeMUR, you need to upgrade your AssemblyAI account, since this isn't included in the free account."}),"\n",(0,i.jsx)(n.li,{children:"Verify that all components are properly connected in the flow."}),"\n",(0,i.jsx)(n.li,{children:"Review the Langflow logs for any error messages."}),"\n",(0,i.jsxs)(n.li,{children:["Check the ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/docs/",children:"AssemblyAI API documentation"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Contact ",(0,i.jsx)(n.a,{href:"https://www.assemblyai.com/contact/support",children:"AssemblyAI support"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);