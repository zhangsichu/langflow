"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[6224],{7089:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Components/bundles-datastax","title":"DataStax","description":"Bundles contain custom components that support specific third-party integrations with Langflow.","source":"@site/docs/Components/bundles-datastax.mdx","sourceDirName":"Components","slug":"/bundles-datastax","permalink":"/bundles-datastax","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"DataStax","slug":"/bundles-datastax"},"sidebar":"docs","previous":{"title":"Composio","permalink":"/integrations-composio"},"next":{"title":"DeepSeek","permalink":"/bundles-deepseek"}}');var n=r(74848),a=r(28453),i=r(17886);const o={title:"DataStax",slug:"/bundles-datastax"},d=void 0,c={},l=[{value:"Astra DB Chat Memory",id:"astra-db-chat-memory",level:2},{value:"Astra DB Chat Memory parameters",id:"astra-db-chat-memory-parameters",level:3},{value:"Astra DB CQL",id:"astra-db-cql",level:2},{value:"Astra DB CQL parameters",id:"astra-db-cql-parameters",level:3},{value:"Astra DB Tool",id:"astra-db-tool",level:2},{value:"Astra DB Tool parameters",id:"astra-db-tool-parameters",level:3},{value:"Define tool-specific parameters",id:"define-tool-specific-parameters",level:3},{value:"Cassandra Chat Memory",id:"cassandra-chat-memory",level:2},{value:"Cassandra Chat Memory parameters",id:"cassandra-chat-memory-parameters",level:3},{value:"DataStax assistant components",id:"datastax-assistant-components",level:2},{value:"DataStax environment variable components",id:"datastax-environment-variable-components",level:2},{value:"Legacy DataStax components",id:"legacy-datastax-components",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/components-bundle-components",children:"Bundles"})," contain custom components that support specific third-party integrations with Langflow."]}),"\n",(0,n.jsxs)(t.p,{children:["This page describes the components that are available in the ",(0,n.jsx)(t.strong,{children:"DataStax"})," bundle."]}),"\n",(0,n.jsx)(t.h2,{id:"astra-db-chat-memory",children:"Astra DB Chat Memory"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Astra DB Chat Memory"})," component retrieves and stores chat messages using an Astra DB database."]}),"\n",(0,n.jsxs)(t.p,{children:["Chat memories are passed between memory storage components as the ",(0,n.jsx)(t.a,{href:"/data-types#memory",children:(0,n.jsx)(t.code,{children:"Memory"})})," data type.\nSpecifically, the component creates an instance of ",(0,n.jsx)(t.code,{children:"AstraDBChatMessageHistory"}),", which is a LangChain chat message history class that uses Astra DB for storage."]}),"\n",(0,n.jsxs)(t.admonition,{type:"important",children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Astra DB Chat Memory"})," component isn't recommended for most memory storage because memories tend to be long JSON objects or strings, often exceeding the maximum size of a document or object supported by Astra DB."]}),(0,n.jsxs)(t.p,{children:["However, Langflow's ",(0,n.jsx)(t.strong,{children:"Agent"})," component includes built-in chat memory that is enabled by default.\nYour agentic flows don't need an external database to store chat memory.\nFor more information, see ",(0,n.jsx)(t.a,{href:"/memory",children:"Memory management options"}),"."]})]}),"\n",(0,n.jsxs)(t.p,{children:["For more information about using external chat memory in flows, see the ",(0,n.jsxs)(t.a,{href:"/components-helpers#message-history",children:[(0,n.jsx)(t.strong,{children:"Message History"})," component"]}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"astra-db-chat-memory-parameters",children:"Astra DB Chat Memory parameters"}),"\n",(0,n.jsxs)(t.p,{children:["Some component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,n.jsx)(i.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,n.jsx)(t.strong,{children:"Controls"})," in the ",(0,n.jsx)(t.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"collection_name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name of the Astra DB collection for storing messages. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"token"}),(0,n.jsx)(t.td,{children:"SecretString"}),(0,n.jsx)(t.td,{children:"Input parameter. The authentication token for Astra DB access. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"api_endpoint"}),(0,n.jsx)(t.td,{children:"SecretString"}),(0,n.jsx)(t.td,{children:"Input parameter. The API endpoint URL for the Astra DB service. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"namespace"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The optional namespace within Astra DB for the collection."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"session_id"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The unique identifier for the chat session. Uses the current session ID if not provided."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"astra-db-cql",children:"Astra DB CQL"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Astra DB CQL"})," component allows agents to query data from CQL tables in Astra DB."]}),"\n",(0,n.jsxs)(t.p,{children:["The output is a list of ",(0,n.jsx)(t.a,{href:"/data-types#data",children:(0,n.jsx)(t.code,{children:"Data"})})," objects containing the query results from the Astra DB CQL table. Each Data object contains the document fields specified by the projection fields. Limited by the ",(0,n.jsx)(t.code,{children:"number_of_results"})," parameter."]}),"\n",(0,n.jsx)(t.h3,{id:"astra-db-cql-parameters",children:"Astra DB CQL parameters"}),"\n",(0,n.jsxs)(t.p,{children:["Some component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,n.jsx)(i.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,n.jsx)(t.strong,{children:"Controls"})," in the ",(0,n.jsx)(t.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Tool Name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name used to reference the tool in the agent's prompt."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Tool Description"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. A brief description of the tool to guide the model in using it."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Keyspace"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name of the keyspace."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Table Name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name of the Astra DB CQL table to query."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Token"}),(0,n.jsx)(t.td,{children:"SecretString"}),(0,n.jsx)(t.td,{children:"Input parameter. The authentication token for Astra DB."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"API Endpoint"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The Astra DB API endpoint."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Projection Fields"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:'Input parameter. The attributes to return, separated by commas. Default: "*".'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Partition Keys"}),(0,n.jsx)(t.td,{children:"Dict"}),(0,n.jsx)(t.td,{children:"Input parameter. Required parameters that the model must fill to query the tool."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Clustering Keys"}),(0,n.jsx)(t.td,{children:"Dict"}),(0,n.jsxs)(t.td,{children:["Input parameter. Optional parameters the model can fill to refine the query. Required parameters should be marked with an exclamation mark, for example, ",(0,n.jsx)(t.code,{children:"!customer_id"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Static Filters"}),(0,n.jsx)(t.td,{children:"Dict"}),(0,n.jsx)(t.td,{children:"Input parameter. Attribute-value pairs used to filter query results."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Limit"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The number of records to return."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"astra-db-tool",children:"Astra DB Tool"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Astra DB Tool"})," component enables searching data in Astra DB collections, including hybrid search, vector search, and regular filter-based search.\nSpecialized searches require that the collection is pre-configured with the required parameters."]}),"\n",(0,n.jsxs)(t.p,{children:["Outputs a list of ",(0,n.jsx)(t.a,{href:"/data-types#data",children:(0,n.jsx)(t.code,{children:"Data"})})," objects containing the query results from Astra DB. Each ",(0,n.jsx)(t.code,{children:"Data"})," object contains the document fields specified by the projection attributes. Limited by the ",(0,n.jsx)(t.code,{children:"number_of_results"})," parameter and the upper limit of the Astra DB Data API, depending on the type of search."]}),"\n",(0,n.jsxs)(t.p,{children:["You can use the component to execute queries directly as isolated steps in a flow, or you can connect it as a ",(0,n.jsx)(t.a,{href:"/agents-tools",children:"tool for an agent"})," to allow the agent to query data from Astra DB collections as needed to respond to user queries.\nFor more information, see ",(0,n.jsx)(t.a,{href:"/agents",children:"Use Langflow agents"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Astra DB Tool component connected as a tool to an Agent component",src:r(68335).A+"",width:"4000",height:"2742"})}),"\n",(0,n.jsx)(t.h3,{id:"astra-db-tool-parameters",children:"Astra DB Tool parameters"}),"\n",(0,n.jsxs)(t.p,{children:["The following parameters are for the ",(0,n.jsx)(t.strong,{children:"Astra DB Tool"})," component overall."]}),"\n",(0,n.jsxs)(t.p,{children:["The values for ",(0,n.jsx)(t.strong,{children:"Collection Name"}),", ",(0,n.jsx)(t.strong,{children:"Astra DB Application Token"}),", and ",(0,n.jsx)(t.strong,{children:"Astra DB API Endpoint"})," are found in your Astra DB deployment. For more information, see the ",(0,n.jsx)(t.a,{href:"https://docs.datastax.com/en/astra-db-serverless/databases/create-database.html",children:"Astra DB Serverless documentation"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Tool Name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name used to reference the tool in the agent's prompt."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Tool Description"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. A brief description of the tool. This helps the model decide when to use it."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Keyspace Name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsxs)(t.td,{children:["Input parameter. The name of the keyspace in Astra DB. Default: ",(0,n.jsx)(t.code,{children:"default_keyspace"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Collection Name"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The name of the Astra DB collection to query."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Token"}),(0,n.jsx)(t.td,{children:"SecretString"}),(0,n.jsx)(t.td,{children:"Input parameter. The authentication token for accessing Astra DB."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"API Endpoint"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Input parameter. The Astra DB API endpoint."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Projection Fields"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsxs)(t.td,{children:["Input parameter. Comma-separated list of attributes to return from matching documents. The default is the default projection, ",(0,n.jsx)(t.code,{children:"*"}),", which returns all attributes except reserved fields like ",(0,n.jsx)(t.code,{children:"$vector"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Tool Parameters"}),(0,n.jsx)(t.td,{children:"Dict"}),(0,n.jsxs)(t.td,{children:["Input parameter. ",(0,n.jsxs)(t.a,{href:"https://docs.datastax.com/en/astra-db-serverless/api-reference/document-methods/find-many.html#parameters",children:["Astra DB Data API ",(0,n.jsx)(t.code,{children:"find"})," filters"]})," that become tools for an agent. These Filters ",(0,n.jsx)(t.em,{children:"may"})," be used in a search, if the agent selects them. See ",(0,n.jsx)(t.a,{href:"#define-tool-specific-parameters",children:"Define tool-specific parameters"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Static Filters"}),(0,n.jsx)(t.td,{children:"Dict"}),(0,n.jsxs)(t.td,{children:["Input parameter. Attribute-value pairs used to filter query results. Equivalent to ",(0,n.jsxs)(t.a,{href:"https://docs.datastax.com/en/astra-db-serverless/api-reference/document-methods/find-many.html#parameters",children:["Astra DB Data API ",(0,n.jsx)(t.code,{children:"find"})," filters"]}),". ",(0,n.jsx)(t.strong,{children:"Static Filters"})," are included with ",(0,n.jsx)(t.em,{children:"every"})," query. Use ",(0,n.jsx)(t.strong,{children:"Static Filters"})," without semantic search to perform a regular filter search."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Number of Results"}),(0,n.jsx)(t.td,{children:"Int"}),(0,n.jsx)(t.td,{children:"Input parameter. The maximum number of documents to return."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Semantic Search"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsxs)(t.td,{children:["Input parameter. Whether to run a similarity search by generating a vector embedding from the chat input and following the ",(0,n.jsx)(t.strong,{children:"Semantic Search Instruction"}),". Default: false. If true, you must attach an ",(0,n.jsxs)(t.a,{href:"/components-embedding-models",children:[(0,n.jsx)(t.strong,{children:"Embedding Model"})," component"]})," or have vectorize pre-enabled on your collection."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Use Astra DB Vectorize"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:"Input parameter. Whether to use the Astra DB vectorize feature for embedding generation when running a semantic search. Default: false. If true, you must have vectorize pre-enabled on your collection."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Embedding Model"}),(0,n.jsx)(t.td,{children:"Embedding"}),(0,n.jsxs)(t.td,{children:["Input parameter. A port to attach an ",(0,n.jsx)(t.strong,{children:"Embedding Model"})," component to generate a vector from input text for semantic search. This can be used when ",(0,n.jsx)(t.strong,{children:"Semantic Search"})," is true, with or without vectorize. Be sure to use a model that aligns with the dimensions of the embeddings already present in the collection."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Semantic Search Instruction"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsxs)(t.td,{children:["Input parameter. The query to use for similarity search. Default: ",(0,n.jsx)(t.code,{children:'"Find documents similar to the query."'}),". This instruction is used to guide the model in performing semantic search."]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"define-tool-specific-parameters",children:"Define tool-specific parameters"}),"\n",(0,n.jsxs)(t.admonition,{type:"tip",children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Tool Parameters"})," are small functions that you create within the ",(0,n.jsx)(t.strong,{children:"Astra DB Tool"})," component.\nThey give the LLM pre-defined ways to interact with the data in your collection."]}),(0,n.jsx)(t.p,{children:"Without these filters, the LLM has no concept of the data in your collection or which attributes are important."}),(0,n.jsx)(t.p,{children:"At runtime, the LLM can decide which filters are relevant to the current query."}),(0,n.jsxs)(t.p,{children:["Filters in ",(0,n.jsx)(t.strong,{children:"Tool Parameters"})," aren't always applied.\nIf you want to enforce filters for ",(0,n.jsx)(t.em,{children:"every"})," query, use the ",(0,n.jsx)(t.strong,{children:"Static Filters"})," parameter.\nYou can use both ",(0,n.jsx)(t.strong,{children:"Tool Parameters"})," and ",(0,n.jsx)(t.strong,{children:"Static Filters"})," to set some required filters and some optional filters."]})]}),"\n",(0,n.jsxs)(t.p,{children:["In the ",(0,n.jsx)(t.strong,{children:"Astra DB Tool"})," component's ",(0,n.jsx)(t.strong,{children:"Tool Parameters"})," field, you can create filters to query documents in your collection."]}),"\n",(0,n.jsxs)(t.p,{children:["When used in ",(0,n.jsx)(t.strong,{children:"Tool Mode"})," with an agent, these filters tell the agent which document attributes are most important, which are required in searches, and which operators to use on certain attributes.\nThe filters become available as parameters that the LLM can use when calling the tool, with a better understanding of each parameter provided by the ",(0,n.jsx)(t.strong,{children:"Description"})," field."]}),"\n",(0,n.jsxs)(t.p,{children:["In the ",(0,n.jsx)(t.strong,{children:"Tool Parameters"})," pane, click ",(0,n.jsx)(i.A,{name:"Plus","aria-hidden":"true"})," ",(0,n.jsx)(t.strong,{children:"Add a new row"}),", and then edit each cell in the row.\nFor example, the following filter allows an LLM to filter by unique ",(0,n.jsx)(t.code,{children:"customer_id"})," values:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Name: ",(0,n.jsx)(t.code,{children:"customer_id"})]}),"\n",(0,n.jsx)(t.li,{children:"Attribute Name: Leave empty if the attribute matches the field name in the database."}),"\n",(0,n.jsxs)(t.li,{children:["Description: ",(0,n.jsx)(t.code,{children:'"The unique identifier of the customer to filter by"'}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Is Metadata: Select ",(0,n.jsx)(t.strong,{children:"False"})," unless the value is stored in the metadata field."]}),"\n",(0,n.jsxs)(t.li,{children:["Is Mandatory: Set to ",(0,n.jsx)(t.strong,{children:"True"})," to make the filter required."]}),"\n",(0,n.jsxs)(t.li,{children:["Is Timestamp: For this example, select ",(0,n.jsx)(t.strong,{children:"False"})," because the value is an ID, not a timestamp."]}),"\n",(0,n.jsxs)(t.li,{children:["Operator: ",(0,n.jsx)(t.code,{children:"$eq"})," to look for an exact match."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["The following fields are available for each row in the ",(0,n.jsx)(t.strong,{children:"Tool Parameters"})," pane:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Name"}),(0,n.jsx)(t.td,{children:"The name of the parameter that is exposed to the LLM. It can be the same as the underlying field name or a more descriptive label. The LLM uses this name, along with the description, to infer what value to provide during execution."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Attribute Name"}),(0,n.jsxs)(t.td,{children:["When the parameter name shown to the LLM differs from the actual field or property in the database, use this setting to map the user-facing name to the correct attribute. For example, to apply a range filter to the timestamp field, define two separate parameters, such as ",(0,n.jsx)(t.code,{children:"start_date"})," and ",(0,n.jsx)(t.code,{children:"end_date"}),", that both reference the same timestamp attribute."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Description"}),(0,n.jsxs)(t.td,{children:["Provides instructions to the LLM on how the parameter should be used. Clear and specific guidance helps the LLM provide valid input. For example, if a field such as ",(0,n.jsx)(t.code,{children:"specialty"})," is stored in lowercase, the description should indicate that the input must be lowercase."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Is Metadata"}),(0,n.jsxs)(t.td,{children:["When loading data using LangChain or Langflow, additional attributes may be stored under a metadata object. If the target attribute is stored this way, enable this option. It adjusts the query by generating a filter in the format: ",(0,n.jsx)(t.code,{children:'{"metadata.<attribute_name>": "<value>"}'})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Is Timestamp"}),(0,n.jsx)(t.td,{children:"For date or time-based filters, enable this option to automatically convert values to the timestamp format that the Astrapy client expects. This ensures compatibility with the underlying API without requiring manual formatting."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Operator"}),(0,n.jsxs)(t.td,{children:["Defines the filtering logic applied to the attribute. You can use any valid ",(0,n.jsx)(t.a,{href:"https://docs.datastax.com/en/astra-db-serverless/api-reference/filter-operator-collections.html",children:"Data API filter operator"}),". For example, to filter a time range on the timestamp attribute, use two parameters: one with the ",(0,n.jsx)(t.code,{children:"$gt"}),' operator for "greater than", and another with the ',(0,n.jsx)(t.code,{children:"$lt"}),' operator for "less than".']})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"cassandra-chat-memory",children:"Cassandra Chat Memory"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Cassandra Chat Memory"})," component retrieves and stores chat messages using an Apache Cassandra-based database, including Astra DB and Hyper-Converged Database (HCD)."]}),"\n",(0,n.jsxs)(t.p,{children:["Chat memories are passed between memory storage components as the ",(0,n.jsx)(t.a,{href:"/data-types#memory",children:(0,n.jsx)(t.code,{children:"Memory"})})," data type.\nSpecifically, the component creates an instance of ",(0,n.jsx)(t.code,{children:"CassandraChatMessageHistory"}),", which is a LangChain chat message history class that uses a Cassandra database for storage."]}),"\n",(0,n.jsxs)(t.p,{children:["For more information about using external chat memory in flows, see the ",(0,n.jsxs)(t.a,{href:"/components-helpers#message-history",children:[(0,n.jsx)(t.strong,{children:"Message History"})," component"]}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"cassandra-chat-memory-parameters",children:"Cassandra Chat Memory parameters"}),"\n",(0,n.jsxs)(t.p,{children:["Some component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,n.jsx)(i.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,n.jsx)(t.strong,{children:"Controls"})," in the ",(0,n.jsx)(t.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"database_ref"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The contact points for the Cassandra database or Astra DB database ID. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"username"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The username for Cassandra. Leave empty for Astra DB."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"token"}),(0,n.jsx)(t.td,{children:"SecretString"}),(0,n.jsx)(t.td,{children:"Input parameter. The password for Cassandra or the token for Astra DB. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"keyspace"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The keyspace in Cassandra or namespace in Astra DB. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"table_name"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The name of the table or collection for storing messages. Required."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"session_id"}),(0,n.jsx)(t.td,{children:"MessageText"}),(0,n.jsx)(t.td,{children:"Input parameter. The unique identifier for the chat session. Optional."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cluster_kwargs"}),(0,n.jsx)(t.td,{children:"Dictionary"}),(0,n.jsx)(t.td,{children:"Input parameter. Additional keyword arguments for the Cassandra cluster configuration. Optional."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"datastax-assistant-components",children:"DataStax assistant components"}),"\n",(0,n.jsx)(t.p,{children:"The following DataStax components are used to create and manage Assistants API functions in a flow:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Astra Assistant Agent"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Create Assistant"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Create Assistant Thread"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Get Assistant Name"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"List Assistants"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Run Assistant"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"datastax-environment-variable-components",children:"DataStax environment variable components"}),"\n",(0,n.jsx)(t.p,{children:"The following DataStax components are used to load and retrieve environment variables in a flow:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Dotenv"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.strong,{children:"Get Environment Variable"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"legacy-datastax-components",children:"Legacy DataStax components"}),"\n",(0,n.jsx)(t.p,{children:"The following components are considered legacy or deprecated.\nThese components are no longer being developed and can be removed in future releases."}),"\n",(0,n.jsx)(t.p,{children:"Replace them with the suggested alternatives as soon as possible."}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Astra DB Vectorize"}),(0,n.jsxs)(t.p,{children:["This component was deprecated in Langflow version 1.1.2.\nReplace it with the ",(0,n.jsxs)(t.a,{href:"/components-vector-stores#astra-db",children:[(0,n.jsx)(t.strong,{children:"Astra DB"})," vector store component"]})," as soon as possible."]}),(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.strong,{children:"Astra DB Vectorize"})," component was used to generate embeddings with Astra DB's vectorize feature in conjunction with an ",(0,n.jsx)(t.strong,{children:"Astra DB"})," vector store component."]}),(0,n.jsxs)(t.p,{children:["The vectorize functionality is now built into the ",(0,n.jsx)(t.strong,{children:"Astra DB"})," vector store component.\nYou no longer need a separate component for vectorize embedding generation."]})]})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},17886:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var s=r(64058),n=r(74848);function a({name:e,...t}){const r=s[e];return r?(0,n.jsx)(r,{...t}):null}},68335:(e,t,r)=>{r.d(t,{A:()=>s});const s=r.p+"assets/images/component-astra-db-json-tool-117aff566c0df01a555264bb128b3693.png"}}]);