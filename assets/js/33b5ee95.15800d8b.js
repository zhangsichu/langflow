"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[750],{17886:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var o=t(64058),s=t(74848);function r({name:e,...n}){const t=o[e];return t?(0,s.jsx)(t,{...n}):null}},45591:(e,n,t)=>{t.r(n),t.d(n,{CH:()=>h,assets:()=>c,chCodeConfig:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"Components/components-models","title":"Language Model","description":"Language Model components in Langflow generate text using a specified Large Language Model (LLM).","source":"@site/docs/Components/components-models.mdx","sourceDirName":"Components","slug":"/components-models","permalink":"/components-models","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Language Model","slug":"/components-models"},"sidebar":"docs","previous":{"title":"Agents","permalink":"/components-agents"},"next":{"title":"Embedding Model","permalink":"/components-embedding-models"}}');var s=t(74848),r=t(28453),a=t(24754),d=t(17886);const i={title:"Language Model",slug:"/components-models"},l=void 0,c={},h={annotations:a.hk,Code:a.Cy},p={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},u=[{value:"Use Language Model components in a flow",id:"use-language-model-components-in-a-flow",level:2},{value:"Language Model parameters",id:"language-model-parameters",level:2},{value:"Language Model output types",id:"language-model-output-types",level:2},{value:"Additional language models",id:"additional-language-models",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:o}=n;return h||x("CH",!1),h.Code||x("CH.Code",!0),o||x("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Language Model"})," components in Langflow generate text using a specified Large Language Model (LLM)."]}),"\n",(0,s.jsxs)(n.p,{children:["Langflow includes a ",(0,s.jsx)(n.strong,{children:"Language Model"})," core component that has built-in support for many LLMs.\nAlternatively, you can use any ",(0,s.jsx)(n.a,{href:"#additional-language-models",children:"additional language model"})," in place of the core ",(0,s.jsx)(n.strong,{children:"Language Model"})," component."]}),"\n",(0,s.jsx)(n.h2,{id:"use-language-model-components-in-a-flow",children:"Use Language Model components in a flow"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"Language Model"})," components anywhere you would use an LLM in a flow."]}),"\n",(0,s.jsxs)(n.p,{children:["These components accept inputs like chat messages, files, and instructions in order to generate a text response.\nThe flow must include ",(0,s.jsxs)(n.a,{href:"/components-io#chat-io",children:[(0,s.jsx)(n.strong,{children:"Chat Input and Output"})," components"]})," to allow chat-based interactions with the LLM.\nHowever, you can also use the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component for actions that don't emit chat output directly, such as the ",(0,s.jsx)(n.strong,{children:"Smart Function"})," component."]}),"\n",(0,s.jsxs)(n.p,{children:["The following example uses the ",(0,s.jsx)(n.strong,{children:"Language Model"})," core component to create a chatbot flow similar to the ",(0,s.jsx)(n.strong,{children:"Basic Prompting"})," template.\nIt also explains how you can replace the core component with another LLM."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component to your flow."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"OpenAI API Key"})," field, enter your OpenAI API key."]}),"\n",(0,s.jsxs)(n.p,{children:["This example uses the default OpenAI model and a built-in Anthropic model to compare responses from different providers.\nIf you want to use a different provider, edit the ",(0,s.jsx)(n.strong,{children:"Model Provider"}),", ",(0,s.jsx)(n.strong,{children:"Model Name"}),", and ",(0,s.jsx)(n.strong,{children:"API Key"})," fields accordingly."]}),"\n",(0,s.jsx)(n.admonition,{title:"My preferred provider or model isn't listed",type:"tip",children:(0,s.jsxs)(n.p,{children:["If you want to use a provider or model that isn't built-in to the ",(0,s.jsx)(n.strong,{children:"Language Model"})," core component, you can replace this component with another compatible component, as explained in ",(0,s.jsx)(n.a,{href:"#additional-language-models",children:"Additional language models"}),".\nThen, you can continue following these steps to build your flow."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),", click ",(0,s.jsx)(d.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Controls"}),", enable the ",(0,s.jsx)(n.strong,{children:"System Message"})," parameter, and then click ",(0,s.jsx)(n.strong,{children:"Close"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a ",(0,s.jsxs)(n.a,{href:"/components-prompts",children:[(0,s.jsx)(n.strong,{children:"Prompt Template"})," component"]})," to your flow."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"Template"})," field, enter some instructions for the LLM, such as ",(0,s.jsx)(n.code,{children:"You are an expert in geography who is tutoring high school students"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Prompt Template"})," component's output to the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component's ",(0,s.jsx)(n.strong,{children:"System Message"})," input."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsxs)(n.a,{href:"/components-io#chat-io",children:[(0,s.jsx)(n.strong,{children:"Chat Input"})," and ",(0,s.jsx)(n.strong,{children:"Chat Output"})," components"]})," to your flow."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Chat Input"})," component to the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component's ",(0,s.jsx)(n.strong,{children:"Input"}),", and then connect the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component's ",(0,s.jsx)(n.strong,{children:"Message"})," output to the ",(0,s.jsx)(n.strong,{children:"Chat Output"})," component."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"A basic prompting flow with Language Model, Prompt Template, Chat Input, and Chat Output components",src:t(80625).A+"",width:"2000",height:"1060"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.strong,{children:"Playground"}),", and ask a question to chat with the LLM and test the flow, such as ",(0,s.jsx)(n.code,{children:"What is the capital of Utah?"}),"."]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Result"}),(0,s.jsx)(n.p,{children:"The following response is an example of an OpenAI model's response.\nYour actual response may vary based on the model version at the time of your request, your template, and input."}),(0,s.jsx)(h.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"The capital of Utah is Salt Lake City. It is not only the largest city in the state but also serves as the cultural and economic center of Utah. Salt Lake City was founded in 1847 by Mormon pioneers and is known for its proximity to the Great Salt Lake and its role in the history of the Church of Jesus Christ of Latter-day Saints. For more information, you can refer to sources such as the U.S. Geological Survey or the official state website of Utah.",props:{}}]}],lang:"text"},annotations:[]}]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Try a different model or provider to see how the response changes. For example:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component, change the model provider to ",(0,s.jsx)(n.strong,{children:"Anthropic"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Select an Anthropic model, such as Claude 3.5 Haiku."}),"\n",(0,s.jsx)(n.li,{children:"Enter an Anthropic API key."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.strong,{children:"Playground"}),", ask the same question as you did before, and then compare the content and format of the responses."]}),"\n",(0,s.jsx)(n.p,{children:"This helps you understand how different models handle the same request so you can choose the best model for your use case.\nYou can also learn more about different models in each model provider's documentation."}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Result"}),(0,s.jsx)(n.p,{children:"The following response is an example of an Anthropic model's response.\nYour actual response may vary based on the model version at the time of your request, your template, and input."}),(0,s.jsx)(n.p,{children:"Note that this response is shorter and includes sources, whereas the OpenAI response was more encyclopedic and didn't cite sources."}),(0,s.jsx)(h.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"The capital of Utah is Salt Lake City. It is also the most populous city in the state. Salt Lake City has been the capital of Utah since 1896, when Utah became a state.",props:{}}]},{tokens:[{content:"Sources:",props:{}}]},{tokens:[{content:"Utah State Government Official Website (utah.gov)",props:{}}]},{tokens:[{content:"U.S. Census Bureau",props:{}}]},{tokens:[{content:"Encyclopedia Britannica",props:{}}]}],lang:"text"},annotations:[]}]})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"language-model-parameters",children:"Language Model parameters"}),"\n",(0,s.jsxs)(n.p,{children:["Some ",(0,s.jsx)(n.strong,{children:"Language Model"})," component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,s.jsx)(d.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Controls"})," in the ",(0,s.jsx)(n.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"provider"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The model provider to use."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"model_name"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The name of the model to use. Options depend on the selected provider."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"api_key"}),(0,s.jsx)(n.td,{children:"SecretString"}),(0,s.jsx)(n.td,{children:"Input parameter. The API Key for authentication with the selected provider."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"input_value"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. The input text to send to the model."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"system_message"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. A system message that helps set the behavior of the assistant."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"stream"}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Input parameter. Whether to stream the response. Default: false."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"temperature"}),(0,s.jsx)(n.td,{children:"Float"}),(0,s.jsxs)(n.td,{children:["Input parameter. Controls randomness in responses. Range: ",(0,s.jsx)(n.code,{children:"[0.0, 1.0]"}),". Default: ",(0,s.jsx)(n.code,{children:"0.1"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"model"}),(0,s.jsx)(n.td,{children:"LanguageModel"}),(0,s.jsxs)(n.td,{children:["Output parameter. Alternative output type to the default ",(0,s.jsx)(n.code,{children:"Message"})," output. Produces an instance of Chat configured with the specified parameters. See ",(0,s.jsx)(n.a,{href:"#language-model-output-types",children:"Language Model output types"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"language-model-output-types",children:"Language Model output types"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Language Model"})," components, including the core component and bundled components, can produce two types of output:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Model Response"}),": The default output type emits the model's generated response as ",(0,s.jsxs)(n.a,{href:"/data-types#message",children:[(0,s.jsx)(n.code,{children:"Message"})," data"]}),".\nUse this output type when you want the typical LLM interaction where the LLM produces a text response based on given input."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Language Model"}),": Change the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component's output type to ",(0,s.jsx)(n.a,{href:"/data-types#languagemodel",children:(0,s.jsx)(n.code,{children:"LanguageModel"})})," when you need to attach an LLM to another component in your flow.\nThis is a specific data type that is only required by certain components, such as the ",(0,s.jsxs)(n.a,{href:"/components-processing#smart-function",children:[(0,s.jsx)(n.strong,{children:"Smart Function"})," component"]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["With this configuration, the ",(0,s.jsx)(n.strong,{children:"Language Model"})," component is meant to support an action completed by another component, rather than producing a text response for a standard chat-based interaction.\nFor an example, the ",(0,s.jsx)(n.strong,{children:"Smart Function"})," component uses an LLM to create a function from natural language input."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"additional-language-models",children:"Additional language models"}),"\n",(0,s.jsxs)(n.p,{children:["If your provider or model isn't supported by the ",(0,s.jsx)(n.strong,{children:"Language Model"})," core component, additional provider-specific models are available in the ",(0,s.jsx)(n.a,{href:"/components-bundle-components",children:(0,s.jsx)(n.strong,{children:"Bundles"})})," section of the ",(0,s.jsx)(n.strong,{children:"Components"})," menu."]}),"\n",(0,s.jsxs)(n.p,{children:["You can use these provider-specific components directly in your flows in the same place that you would use the ",(0,s.jsx)(n.strong,{children:"Language Model"})," core component.\nOr, you can connect them to other components that accept a ",(0,s.jsx)(n.a,{href:"/data-types#languagemodel",children:(0,s.jsx)(n.code,{children:"LanguageModel"})})," input, such as the ",(0,s.jsx)(n.strong,{children:"Smart Function"})," and ",(0,s.jsx)(n.strong,{children:"Agent"})," components."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, to connect a provider-specific component to the ",(0,s.jsx)(n.strong,{children:"Agent"})," component, do the following:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"Components"})," menu, search for your preferred model provider, and then add the provider's LLM component to your flow.\nThe component may not have ",(0,s.jsx)(n.code,{children:"model"})," in the name.\nFor example, Azure OpenAI LLMs are in the ",(0,s.jsxs)(n.a,{href:"/bundles-azure#azure-openai",children:[(0,s.jsx)(n.strong,{children:"Azure OpenAI"})," component"]}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Configure the LLM component as needed to connect to your preferred model."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Change the LLM component's output type from ",(0,s.jsx)(n.strong,{children:"Model Response"})," to ",(0,s.jsx)(n.strong,{children:"Language Model"}),".\nThe output port changes to a ",(0,s.jsx)(n.code,{children:"LanguageModel"})," port.\nFor more information, see ",(0,s.jsx)(n.a,{href:"#language-model-output-types",children:"Language Model output types"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add an ",(0,s.jsx)(n.strong,{children:"Agent"})," component to the flow, and then set ",(0,s.jsx)(n.strong,{children:"Model Provider"})," to ",(0,s.jsx)(n.strong,{children:"Custom"}),".\nThe ",(0,s.jsx)(n.strong,{children:"Model Provider"})," field changes to a ",(0,s.jsx)(n.strong,{children:"Language Model"})," field with a ",(0,s.jsx)(n.code,{children:"LanguageModel"})," port."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Connect the LLM component's output to the ",(0,s.jsx)(n.strong,{children:"Agent"})," component's ",(0,s.jsx)(n.strong,{children:"Language Model"})," input.\nThe ",(0,s.jsx)(n.strong,{children:"Agent"})," component now inherits the LLM settings from the connected LLM component instead of using any of the built-in models."]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},80625:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/component-language-model-1ddc1bd5726d5ea55ac91f7813a024d7.png"}}]);