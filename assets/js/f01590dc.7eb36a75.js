"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[4223],{17886:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var r=n(64058),i=n(74848);function s({name:e,...t}){const n=r[e];return n?(0,i.jsx)(n,{...t}):null}},26928:(e,t,n)=>{n.r(t),n.d(t,{CH:()=>h,assets:()=>a,chCodeConfig:()=>x,contentTitle:()=>l,default:()=>j,frontMatter:()=>d,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"Integrations/Nvidia/integrations-nvidia-ingest","title":"Integrate NVIDIA Retriever Extraction with Langflow","description":"The NVIDIA Retriever Extraction component integrates with the NVIDIA nv-ingest microservice for data ingestion, processing, and extraction of text files.","source":"@site/docs/Integrations/Nvidia/integrations-nvidia-ingest.mdx","sourceDirName":"Integrations/Nvidia","slug":"/integrations-nvidia-ingest","permalink":"/integrations-nvidia-ingest","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Integrate NVIDIA Retriever Extraction with Langflow","slug":"/integrations-nvidia-ingest"},"sidebar":"docs","previous":{"title":"NVIDIA components","permalink":"/bundles-nvidia"},"next":{"title":"NVIDIA NIM on WSL2","permalink":"/integrations-nvidia-ingest-wsl2"}}');var i=n(74848),s=n(28453),o=n(24754),c=n(17886);const d={title:"Integrate NVIDIA Retriever Extraction with Langflow",slug:"/integrations-nvidia-ingest"},l=void 0,a={},h={annotations:o.hk,Code:o.Cy},x={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Use the NVIDIA Retriever Extraction component in a flow",id:"use-the-nvidia-retriever-extraction-component-in-a-flow",level:2},{value:"NVIDIA Retriever Extraction component parameters",id:"parameters",level:2},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return h||g("CH",!1),h.Code||g("CH.Code",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component integrates with the ",(0,i.jsx)(t.a,{href:"https://github.com/NVIDIA/nv-ingest",children:"NVIDIA nv-ingest"})," microservice for data ingestion, processing, and extraction of text files."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"nv-ingest"})," service supports multiple extraction methods for PDF, DOCX, and PPTX file types, and includes pre-  and post-processing services like splitting, chunking, and embedding generation. The extractor service's High Resolution mode uses the ",(0,i.jsx)(t.code,{children:"nemoretriever-parse"})," extraction method for better quality extraction from scanned PDF documents. This feature is only available for PDF files."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component imports the NVIDIA ",(0,i.jsx)(t.code,{children:"Ingestor"})," client, ingests files with requests to the NVIDIA ingest endpoint, and outputs the processed content as a list of ",(0,i.jsx)(t.a,{href:"/data-types#data",children:(0,i.jsx)(t.code,{children:"Data"})})," objects. ",(0,i.jsx)(t.code,{children:"Ingestor"})," accepts additional configuration options for data extraction from other text formats. To configure these options, see the ",(0,i.jsx)(t.a,{href:"#parameters",children:"component parameters"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"NVIDIA Retriever Extraction is also known as NV-Ingest and NeMo Retriever Extraction."})}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["An NVIDIA Ingest endpoint. For more information on setting up an NVIDIA Ingest endpoint, see the ",(0,i.jsx)(t.a,{href:"https://github.com/NVIDIA/nv-ingest?tab=readme-ov-file#quickstart",children:"NVIDIA Ingest quickstart"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component requires the installation of additional dependencies to your Langflow environment. To install the dependencies in a virtual environment, run the following commands."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you have the Langflow repository cloned and installed from source:"}),"\n"]}),"\n",(0,i.jsx)(h.Code,{codeConfig:x,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"source **",props:{style:{color:"#79C0FF"}}},{content:"YOUR_LANGFLOW_VENV",props:{style:{color:"#A5D6FF"}}},{content:"**",props:{style:{color:"#79C0FF"}}},{content:"/bin/activate",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"sync ",props:{style:{color:"#A5D6FF"}}},{content:"--extra ",props:{style:{color:"#79C0FF"}}},{content:"nv-ingest",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"run langflow run",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you are installing Langflow from the Python Package Index:"}),"\n"]}),"\n",(0,i.jsx)(h.Code,{codeConfig:x,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"source **",props:{style:{color:"#79C0FF"}}},{content:"YOUR_LANGFLOW_VENV",props:{style:{color:"#A5D6FF"}}},{content:"**",props:{style:{color:"#79C0FF"}}},{content:"/bin/activate",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"pip install ",props:{style:{color:"#A5D6FF"}}},{content:"--prerelease=allow ",props:{style:{color:"#79C0FF"}}},{content:"'langflow[nv-ingest]'",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"uv ",props:{style:{color:"#FFA657"}}},{content:"run langflow run",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"use-the-nvidia-retriever-extraction-component-in-a-flow",children:"Use the NVIDIA Retriever Extraction component in a flow"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component accepts ",(0,i.jsx)(t.code,{children:"Message"})," inputs, and then outputs ",(0,i.jsx)(t.code,{children:"Data"}),". The component calls an NVIDIA Ingest microservice's endpoint to ingest a local file and extract the text."]}),"\n",(0,i.jsxs)(t.p,{children:["To use the ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component in your flow, follow these steps:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Add the ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component to your flow."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.strong,{children:"Base URL"})," field, enter the URL of the NVIDIA Ingest endpoint.\nYou can also store the URL as a ",(0,i.jsx)(t.a,{href:"/configuration-global-variables",children:"global variable"})," to reuse it in multiple components and flows."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click ",(0,i.jsx)(t.strong,{children:"Select Files"})," to select a file to ingest."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Select which text type to extract from the file: text, charts, tables, images, or infographics."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Optional: For PDF files, enable ",(0,i.jsx)(t.strong,{children:"High Resolution Mode"})," for better quality extraction from scanned documents."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Select whether to split the text into chunks."}),"\n",(0,i.jsxs)(t.p,{children:["You can modify the splitting parameters and other hidden settings through the ",(0,i.jsx)(c.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,i.jsx)(t.strong,{children:"Controls"})," in the ",(0,i.jsx)(t.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click ",(0,i.jsx)(t.strong,{children:"Run component"})," to ingest the file, and then open the ",(0,i.jsx)(t.strong,{children:"Logs"})," pane to confirm the component ingested the file."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["To store the processed data in a vector database, add a ",(0,i.jsx)(t.strong,{children:"Vector Store"})," component to your flow, and then connect the ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component's ",(0,i.jsx)(t.code,{children:"Data"})," output to the ",(0,i.jsx)(t.strong,{children:"Vector Store"})," component's input."]}),"\n",(0,i.jsxs)(t.p,{children:["When you run the flow with a ",(0,i.jsx)(t.strong,{children:"Vector Store"})," component, the processed data is stored in the vector database.\nYou can query your database to retrieve the uploaded data."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"NVIDIA Retriever Extraction component flow",src:n(76102).A+"",width:"1722",height:"1548"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"NVIDIA Retriever Extraction component parameters"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component has the following parameters."]}),"\n",(0,i.jsxs)(t.p,{children:["For more information, see the ",(0,i.jsx)(t.a,{href:"https://nvidia.github.io/nv-ingest/user-guide/",children:"NV-Ingest documentation"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"inputs",children:"Inputs"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Display Name"}),(0,i.jsx)(t.th,{children:"Info"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"base_url"}),(0,i.jsx)(t.td,{children:"NVIDIA Ingestion URL"}),(0,i.jsx)(t.td,{children:"The URL of the NVIDIA Ingestion API."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"path"}),(0,i.jsx)(t.td,{children:"Path"}),(0,i.jsx)(t.td,{children:"File path to process."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_text"}),(0,i.jsx)(t.td,{children:"Extract Text"}),(0,i.jsx)(t.td,{children:"Extract text from documents. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_charts"}),(0,i.jsx)(t.td,{children:"Extract Charts"}),(0,i.jsx)(t.td,{children:"Extract text from charts. Default: false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_tables"}),(0,i.jsx)(t.td,{children:"Extract Tables"}),(0,i.jsx)(t.td,{children:"Extract text from tables. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_images"}),(0,i.jsx)(t.td,{children:"Extract Images"}),(0,i.jsx)(t.td,{children:"Extract images from document. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"extract_infographics"}),(0,i.jsx)(t.td,{children:"Extract Infographics"}),(0,i.jsx)(t.td,{children:"Extract infographics from document. Default: false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"text_depth"}),(0,i.jsx)(t.td,{children:"Text Depth"}),(0,i.jsxs)(t.td,{children:["The level at which text is extracted. Options: 'document', 'page', 'block', 'line', 'span'. Default: ",(0,i.jsx)(t.code,{children:"page"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"split_text"}),(0,i.jsx)(t.td,{children:"Split Text"}),(0,i.jsx)(t.td,{children:"Split text into smaller chunks. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"chunk_size"}),(0,i.jsx)(t.td,{children:"Chunk Size"}),(0,i.jsxs)(t.td,{children:["The number of tokens per chunk. Default: ",(0,i.jsx)(t.code,{children:"500"}),". Make sure the chunk size is compatible with your embedding model. For more information, see ",(0,i.jsx)(t.a,{href:"/components-processing#chunk-size",children:"Tokenization errors due to chunk size"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"chunk_overlap"}),(0,i.jsx)(t.td,{children:"Chunk Overlap"}),(0,i.jsxs)(t.td,{children:["Number of tokens to overlap from previous chunk. Default: ",(0,i.jsx)(t.code,{children:"150"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"filter_images"}),(0,i.jsx)(t.td,{children:"Filter Images"}),(0,i.jsx)(t.td,{children:"Filter images (see advanced options for filtering criteria). Default: false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"min_image_size"}),(0,i.jsx)(t.td,{children:"Minimum Image Size Filter"}),(0,i.jsxs)(t.td,{children:["Minimum image width/length in pixels. Default: ",(0,i.jsx)(t.code,{children:"128"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"min_aspect_ratio"}),(0,i.jsx)(t.td,{children:"Minimum Aspect Ratio Filter"}),(0,i.jsxs)(t.td,{children:["Minimum allowed aspect ratio (width / height). Default: ",(0,i.jsx)(t.code,{children:"0.2"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"max_aspect_ratio"}),(0,i.jsx)(t.td,{children:"Maximum Aspect Ratio Filter"}),(0,i.jsxs)(t.td,{children:["Maximum allowed aspect ratio (width / height). Default: ",(0,i.jsx)(t.code,{children:"5.0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"dedup_images"}),(0,i.jsx)(t.td,{children:"Deduplicate Images"}),(0,i.jsx)(t.td,{children:"Filter duplicated images. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"caption_images"}),(0,i.jsx)(t.td,{children:"Caption Images"}),(0,i.jsx)(t.td,{children:"Generate captions for images using the NVIDIA captioning model. Default: true."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"high_resolution"}),(0,i.jsx)(t.td,{children:"High Resolution (PDF only)"}),(0,i.jsx)(t.td,{children:"Process PDF in high-resolution mode for better quality extraction from scanned PDF. Default: false."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"outputs",children:"Outputs"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"NVIDIA Retriever Extraction"})," component outputs a list of ",(0,i.jsx)(t.a,{href:"/data-types#data",children:(0,i.jsx)(t.code,{children:"Data"})})," objects where each object contains:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"text"}),": The extracted content.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"For text documents: The extracted text content."}),"\n",(0,i.jsx)(t.li,{children:"For tables and charts: The extracted table/chart content."}),"\n",(0,i.jsx)(t.li,{children:"For images: The image caption."}),"\n",(0,i.jsx)(t.li,{children:"For infographics: The extracted infographic content."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"file_path"}),": The source file name and path."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"document_type"}),": The type of the document, which can be ",(0,i.jsx)(t.code,{children:"text"}),", ",(0,i.jsx)(t.code,{children:"structured"}),", or ",(0,i.jsx)(t.code,{children:"image"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"description"}),": Additional description of the content."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The output varies based on the ",(0,i.jsx)(t.code,{children:"document_type"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Documents with ",(0,i.jsx)(t.code,{children:'document_type: "text"'})," contain:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Raw text content extracted from documents, for example, paragraphs from PDFs or DOCX files."}),"\n",(0,i.jsxs)(t.li,{children:["Content stored directly in the ",(0,i.jsx)(t.code,{children:"text"})," field."]}),"\n",(0,i.jsxs)(t.li,{children:["Content extracted using the ",(0,i.jsx)(t.code,{children:"extract_text"})," parameter."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Documents with ",(0,i.jsx)(t.code,{children:'document_type: "structured"'})," contain:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Text extracted from tables, charts, and infographics and processed to preserve structural information."}),"\n",(0,i.jsxs)(t.li,{children:["Content extracted using the ",(0,i.jsx)(t.code,{children:"extract_tables"}),", ",(0,i.jsx)(t.code,{children:"extract_charts"}),", and ",(0,i.jsx)(t.code,{children:"extract_infographics"})," parameters."]}),"\n",(0,i.jsxs)(t.li,{children:["Content stored in the ",(0,i.jsx)(t.code,{children:"text"})," field after being processed from the ",(0,i.jsx)(t.code,{children:"table_content"})," metadata."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Documents with ",(0,i.jsx)(t.code,{children:'document_type: "image"'})," contain:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Image content extracted from documents."}),"\n",(0,i.jsxs)(t.li,{children:["Caption text stored in the ",(0,i.jsx)(t.code,{children:"text"})," field when ",(0,i.jsx)(t.code,{children:"caption_images"})," is enabled."]}),"\n",(0,i.jsxs)(t.li,{children:["Content extracted using the ",(0,i.jsx)(t.code,{children:"extract_images"})," parameter."]}),"\n"]}),"\n"]}),"\n"]})]})}function j(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}function g(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},76102:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/nvidia-component-ingest-astra-c6f0107751252206ab0d500a25ba3f9c.png"}}]);