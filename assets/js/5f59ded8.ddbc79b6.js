"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[785],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const o={},r=t.createContext(o);function i(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:s},e.children)}},45950:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Components/components-memories","title":"Memories","description":"In Langflow version 1.5, the Memory category was removed.","source":"@site/docs/Components/components-memories.mdx","sourceDirName":"Components","slug":"/components-memories","permalink":"/components-memories","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Memories","slug":"/components-memories"},"sidebar":"docs","previous":{"title":"Tools","permalink":"/components-tools"},"next":{"title":"About bundles","permalink":"/components-bundle-components"}}');var o=n(74848),r=n(28453);const i={title:"Memories",slug:"/components-memories"},c=void 0,a={},d=[{value:"Message History",id:"message-history",level:2},{value:"Message Store",id:"message-store",level:2},{value:"Provider-specific chat memory components",id:"provider-specific-chat-memory-components",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:["In Langflow version 1.5, the ",(0,o.jsx)(s.strong,{children:"Memory"})," category was removed."]}),"\n",(0,o.jsxs)(s.p,{children:["All components that were in this category were replaced by other components or moved to other categories in the ",(0,o.jsx)(s.strong,{children:"Components"})," menu."]}),"\n",(0,o.jsxs)(s.admonition,{type:"important",children:[(0,o.jsxs)(s.p,{children:["Some components that were in the ",(0,o.jsx)(s.strong,{children:"Memory"})," category are legacy components.\nYou can use these components in your flows, but they are no longer maintained and may be removed in a future release."]}),(0,o.jsx)(s.p,{children:"It is recommended that you replace all legacy components with the replacement components described on this page."})]}),"\n",(0,o.jsx)(s.h2,{id:"message-history",children:"Message History"}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsxs)(s.a,{href:"/components-helpers#message-history",children:[(0,o.jsx)(s.strong,{children:"Message History"})," component"]})," was moved to the ",(0,o.jsx)(s.strong,{children:"Helpers"})," category.\nThis component combines the functionality of the legacy ",(0,o.jsx)(s.strong,{children:"Chat History"})," and ",(0,o.jsx)(s.strong,{children:"Message Store"})," components."]}),"\n",(0,o.jsx)(s.h2,{id:"message-store",children:"Message Store"}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.strong,{children:"Message Store"})," component is a legacy component.\nThe functionality provided by this component is available in the ",(0,o.jsx)(s.strong,{children:"Message History"})," component.\nReplace this component with the ",(0,o.jsxs)(s.a,{href:"/components-helpers#message-history",children:[(0,o.jsx)(s.strong,{children:"Message History"})," component"]}),"."]}),"\n",(0,o.jsx)(s.h2,{id:"provider-specific-chat-memory-components",children:"Provider-specific chat memory components"}),"\n",(0,o.jsxs)(s.p,{children:["Provider-specific components were moved to the ",(0,o.jsx)(s.strong,{children:"Bundles"})," category:"]}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsxs)(s.a,{href:"/bundles-mem0",children:[(0,o.jsx)(s.strong,{children:"Mem0 Chat Memory"})," component"]})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsxs)(s.a,{href:"/bundles-redis",children:[(0,o.jsx)(s.strong,{children:"Redis Chat Memory"})," component"]})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsxs)(s.a,{href:"/bundles-datastax#cassandra-chat-memory",children:[(0,o.jsx)(s.strong,{children:"Cassandra Chat Memory"})," component"]})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsxs)(s.a,{href:"/bundles-datastax#astra-db-chat-memory",children:[(0,o.jsx)(s.strong,{children:"Astra DB Chat Memory"})," component"]})}),"\n"]}),"\n",(0,o.jsxs)(n,{children:[(0,o.jsx)("summary",{children:"Zep Chat Memory"}),(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.strong,{children:"Zep Chat Memory"})," component is a legacy component.\nReplace this component with the ",(0,o.jsxs)(s.a,{href:"/components-helpers#message-history",children:[(0,o.jsx)(s.strong,{children:"Message History"})," component"]}),"."]}),(0,o.jsxs)(s.p,{children:["This component creates a ",(0,o.jsx)(s.code,{children:"ZepChatMessageHistory"})," instance, enabling storage and retrieval of chat messages using Zep, a memory server for LLMs."]}),(0,o.jsx)(s.p,{children:"It accepts the following parameters:"}),(0,o.jsxs)(s.table,{children:[(0,o.jsx)(s.thead,{children:(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.th,{children:"Name"}),(0,o.jsx)(s.th,{children:"Type"}),(0,o.jsx)(s.th,{children:"Description"})]})}),(0,o.jsxs)(s.tbody,{children:[(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"url"}),(0,o.jsx)(s.td,{children:"MessageText"}),(0,o.jsx)(s.td,{children:"Input parameter. The URL of the Zep instance. Required."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"api_key"}),(0,o.jsx)(s.td,{children:"SecretString"}),(0,o.jsx)(s.td,{children:"Input parameter. The API Key for authentication with the Zep instance."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"api_base_path"}),(0,o.jsx)(s.td,{children:"Dropdown"}),(0,o.jsx)(s.td,{children:"Input parameter. The API version to use. Options include api/v1 or api/v2."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"session_id"}),(0,o.jsx)(s.td,{children:"MessageText"}),(0,o.jsx)(s.td,{children:"Input parameter. The unique identifier for the chat session. Optional."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"message_history"}),(0,o.jsx)(s.td,{children:"BaseChatMessageHistory"}),(0,o.jsx)(s.td,{children:"Output parameter. An instance of ZepChatMessageHistory for the session."})]})]})]})]})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);