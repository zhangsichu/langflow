"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[5412],{17886:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var d=t(64058),s=t(74848);function i({name:e,...n}){const t=d[e];return t?(0,s.jsx)(t,{...n}):null}},51993:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"Components/components-embedding-models","title":"Embedding Model","description":"Embedding Model components in Langflow generate text embeddings using a specified Large Language Model (LLM).","source":"@site/docs/Components/components-embedding-models.mdx","sourceDirName":"Components","slug":"/components-embedding-models","permalink":"/components-embedding-models","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Embedding Model","slug":"/components-embedding-models"},"sidebar":"docs","previous":{"title":"Language Model","permalink":"/components-models"},"next":{"title":"Data","permalink":"/components-data"}}');var s=t(74848),i=t(28453),r=t(17886);const o={title:"Embedding Model",slug:"/components-embedding-models"},l=void 0,c={},a=[{value:"Use Embedding Model components in a flow",id:"use-embedding-model-components-in-a-flow",level:2},{value:"Embedding Model",id:"embedding-model",level:2},{value:"Additional embedding models",id:"additional-embedding-model-components",level:2},{value:"Legacy embedding components",id:"legacy-embedding-components",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:d}=n;return d||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Embedding Model"})," components in Langflow generate text embeddings using a specified Large Language Model (LLM)."]}),"\n",(0,s.jsxs)(n.p,{children:["Langflow includes an ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," core component that has built-in support for some LLMs.\nAlternatively, you can use ",(0,s.jsx)(n.a,{href:"#additional-embedding-model-components",children:"additional embedding models"})," in place of the core ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component."]}),"\n",(0,s.jsx)(n.h2,{id:"use-embedding-model-components-in-a-flow",children:"Use Embedding Model components in a flow"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," components anywhere you need to generate embeddings in a flow."]}),"\n",(0,s.jsxs)(n.p,{children:["This example shows how to use an ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component in a flow to create a semantic search system.\nThis flow loads a text file, splits the text into chunks, generates embeddings for each chunk, and then loads the chunks and embeddings into a vector store. The ",(0,s.jsx)(n.strong,{children:"Input and Output"})," components allow a user to query the vector store through a chat interface."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"A semantic search flow that uses Embedding Model, File, Split Text, Chroma DB, Chat Input, and Chat Output components",src:t(54016).A+"",width:"4000",height:"2514"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a flow, add a ",(0,s.jsx)(n.strong,{children:"File"})," component, and then select a file containing text data, such as a PDF, that you can use to test the flow."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add an ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component, and then provide a valid OpenAI API key.\nYou can enter component API keys directly or use Langflow global variables to reference your API keys."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["If your preferred embedding model provider or model isn't supported by the ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," core component, you can use ",(0,s.jsx)(n.a,{href:"#additional-embedding-model-components",children:"additional embedding models"})," in place of the core component."]}),(0,s.jsxs)(n.p,{children:["Search the ",(0,s.jsx)(n.strong,{children:"Components"})," menu for your preferred provider to find additional embedding models, such as the ",(0,s.jsxs)(n.a,{href:"/bundles-huggingface#hugging-face-embeddings-inference",children:[(0,s.jsx)(n.strong,{children:"Hugging Face Embeddings Inference"})," component"]}),"."]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a ",(0,s.jsxs)(n.a,{href:"/components-processing#split-text",children:[(0,s.jsx)(n.strong,{children:"Split Text"})," component"]})," to your flow.\nThis component splits text input into smaller chunks to be processed into embeddings."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a ",(0,s.jsxs)(n.a,{href:"/components-vector-stores",children:[(0,s.jsx)(n.strong,{children:"Vector Store"})," component"]}),", such as the ",(0,s.jsx)(n.strong,{children:"Chroma DB"})," component, to your flow, and then configure the component to connect to your vector store database.\nThis component stores the generated embeddings so they can be used for similarity search."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Connect the components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"File"})," component's ",(0,s.jsx)(n.strong,{children:"Loaded Files"})," output to the ",(0,s.jsx)(n.strong,{children:"Split Text"})," component's ",(0,s.jsx)(n.strong,{children:"Data or DataFrame"})," input."]}),"\n",(0,s.jsxs)(n.li,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Split Text"})," component's ",(0,s.jsx)(n.strong,{children:"Chunks"})," output to the ",(0,s.jsx)(n.strong,{children:"Vector Store"})," component's ",(0,s.jsx)(n.strong,{children:"Ingest Data"})," input."]}),"\n",(0,s.jsxs)(n.li,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component's ",(0,s.jsx)(n.strong,{children:"Embeddings"})," output to the ",(0,s.jsx)(n.strong,{children:"Vector Store"})," component's ",(0,s.jsx)(n.strong,{children:"Embedding"})," input."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To query the vector store, add ",(0,s.jsxs)(n.a,{href:"/components-io#chat-io",children:[(0,s.jsx)(n.strong,{children:"Chat Input and Output"})," components"]}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Chat Input"})," component to the ",(0,s.jsx)(n.strong,{children:"Vector Store"})," component's ",(0,s.jsx)(n.strong,{children:"Search Query"})," input."]}),"\n",(0,s.jsxs)(n.li,{children:["Connect the ",(0,s.jsx)(n.strong,{children:"Vector Store"})," component's ",(0,s.jsx)(n.strong,{children:"Search Results"})," output to the ",(0,s.jsx)(n.strong,{children:"Chat Output"})," component."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.strong,{children:"Playground"}),", and then enter a search query to retrieve text chunks that are most semantically similar to your query."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"embedding-model",children:"Embedding Model"}),"\n",(0,s.jsxs)(n.p,{children:["Some ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component input parameters are hidden by default in the visual editor.\nYou can toggle parameters through the ",(0,s.jsx)(r.A,{name:"SlidersHorizontal","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Controls"})," in the ",(0,s.jsx)(n.a,{href:"/concepts-components#component-menus",children:"component's header menu"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Display Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"provider"}),(0,s.jsx)(n.td,{children:"Model Provider"}),(0,s.jsx)(n.td,{children:"List"}),(0,s.jsx)(n.td,{children:"Input parameter. Select the embedding model provider."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"model"}),(0,s.jsx)(n.td,{children:"Model Name"}),(0,s.jsx)(n.td,{children:"List"}),(0,s.jsx)(n.td,{children:"Input parameter. Select the embedding model to use."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"api_key"}),(0,s.jsx)(n.td,{children:"OpenAI API Key"}),(0,s.jsx)(n.td,{children:"Secret[String]"}),(0,s.jsx)(n.td,{children:"Input parameter. The API key required for authenticating with the provider."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"api_base"}),(0,s.jsx)(n.td,{children:"API Base URL"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"Input parameter. Base URL for the API. Leave empty for default."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"dimensions"}),(0,s.jsx)(n.td,{children:"Dimensions"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"Input parameter. The number of dimensions for the output embeddings."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"chunk_size"}),(0,s.jsx)(n.td,{children:"Chunk Size"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsxs)(n.td,{children:["Input parameter. The size of text chunks to process. Default: ",(0,s.jsx)(n.code,{children:"1000"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"request_timeout"}),(0,s.jsx)(n.td,{children:"Request Timeout"}),(0,s.jsx)(n.td,{children:"Float"}),(0,s.jsx)(n.td,{children:"Input parameter. Timeout for API requests."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"max_retries"}),(0,s.jsx)(n.td,{children:"Max Retries"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsxs)(n.td,{children:["Input parameter. Maximum number of retry attempts. Default: ",(0,s.jsx)(n.code,{children:"3"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"show_progress_bar"}),(0,s.jsx)(n.td,{children:"Show Progress Bar"}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:"Input parameter. Whether to display a progress bar during embedding generation."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"model_kwargs"}),(0,s.jsx)(n.td,{children:"Model Kwargs"}),(0,s.jsx)(n.td,{children:"Dictionary"}),(0,s.jsx)(n.td,{children:"Input parameter. Additional keyword arguments to pass to the model."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"embeddings"}),(0,s.jsx)(n.td,{children:"Embeddings"}),(0,s.jsx)(n.td,{children:"Embeddings"}),(0,s.jsx)(n.td,{children:"Output parameter. An instance for generating embeddings using the selected provider."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"additional-embedding-model-components",children:"Additional embedding models"}),"\n",(0,s.jsxs)(n.p,{children:["If your provider or model isn't supported by the ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," core component, additional provider-specific ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," components are available in the ",(0,s.jsx)(n.a,{href:"/components-bundle-components",children:(0,s.jsx)(n.strong,{children:"Bundles"})})," section of the ",(0,s.jsx)(n.strong,{children:"Components"})," menu."]}),"\n",(0,s.jsx)(n.h2,{id:"legacy-embedding-components",children:"Legacy embedding components"}),"\n",(0,s.jsx)(n.p,{children:"The following components are legacy components.\nYou can still use them in your flows, but they are no longer maintained and they can be removed in future releases."}),"\n",(0,s.jsxs)(d,{children:[(0,s.jsx)("summary",{children:"Embedding Similarity"}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Embedding Similarity"})," component is replaced by built-in similarity search functionality in ",(0,s.jsxs)(n.a,{href:"/components-vector-stores",children:[(0,s.jsx)(n.strong,{children:"Vector Store"})," components"]}),"."]}),(0,s.jsx)(n.p,{children:"This component calculates similarity scores for two embedding vectors."}),(0,s.jsx)(n.p,{children:"It accepts the following parameters:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Display Name"}),(0,s.jsx)(n.th,{children:"Info"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"embedding_vectors"}),(0,s.jsx)(n.td,{children:"Embedding Vectors"}),(0,s.jsx)(n.td,{children:"Input parameter. A list containing exactly two data objects with embedding vectors to compare."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"similarity_metric"}),(0,s.jsx)(n.td,{children:"Similarity Metric"}),(0,s.jsx)(n.td,{children:'Input parameter. Select the similarity metric to use. Options: "Cosine Similarity", "Euclidean Distance", "Manhattan Distance".'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"similarity_data"}),(0,s.jsx)(n.td,{children:"Similarity Data"}),(0,s.jsx)(n.td,{children:"Output parameter. A data object containing the computed similarity score and additional information."})]})]})]})]}),"\n",(0,s.jsxs)(d,{children:[(0,s.jsx)("summary",{children:"Text Embedder"}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Text Embedder"})," component is replaced by the ",(0,s.jsx)(n.strong,{children:"Embedding Model"})," component."]}),(0,s.jsx)(n.p,{children:"This component generates embeddings for a given message using a specified embedding model."}),(0,s.jsx)(n.p,{children:"It accepts the following parameters:"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Display Name"}),(0,s.jsx)(n.th,{children:"Info"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"embedding_model"}),(0,s.jsx)(n.td,{children:"Embedding Model"}),(0,s.jsx)(n.td,{children:"Input parameter. The embedding model to use for generating embeddings."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"message"}),(0,s.jsx)(n.td,{children:"Message"}),(0,s.jsx)(n.td,{children:"Input parameter. The message for which to generate embeddings."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"embeddings"}),(0,s.jsx)(n.td,{children:"Embedding Data"}),(0,s.jsx)(n.td,{children:"Output parameter. A data object containing the original text and its embedding vector."})]})]})]})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},54016:(e,n,t)=>{t.d(n,{A:()=>d});const d=t.p+"assets/images/component-embedding-models-add-chat-fec505c7d61c7bddc37eeb1d4cb9d489.png"}}]);